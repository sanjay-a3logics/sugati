<apex:page standardController="Opportunity" extensions="ManageTasksController" sidebar="false" showHeader="false" title="Manage Tasks" action="{!pageReferenceMethod}">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"> 
        <head>
             <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/moment.min.js')}" />
            <c:BasicResources ></c:BasicResources>
            
            
                <script>
                    var myApp = angular.module('MyApp', [ 'ui.sortable', 'ui.select', 'ui.bootstrap']);
                    
                    var contrl = myApp.controller('myController' ,function($scope,$http, $timeout){
                        $scope.mastercheckbox = false;
                        $scope.SectionType = '';
                        $scope.PageMessage = {!PageMessage}
                        $scope.backButton= ((typeof sforce != 'undefined') && (sforce != null));
                        $scope.pickList = {!pickLists};
                        $scope.taskFieldSet = {!tasksFieldSet};
                        $scope.newTask = {Status:'Not Started'};
                        $scope.replation = '.';
                        
                        $scope.selectCheckboxes = function(){
                            angular.forEach($scope.contentCategory, function(item){
                                item.selected = $scope.mastercheckbox ;
                            });
                        }
                        
                        $scope.changeCat = function(){
                            $scope.getTasks();
                        }
                        $scope.splitUp = function(data){
                            return data.split('.');    
                         }
                        $scope.getTasks = function(){
                            $scope.loading("show");
                            console.log($scope.SectionType);
                            Visualforce.remoting.Manager.invokeAction(
                                   '{!$RemoteAction.ManageTasksController.getTasks}',$scope.SectionType,'{!opp.id}',
                                    function(result, event){
                                        if (event.status) {
                                            $scope.contentCategory = JSON.parse(result);
                                            $scope.$apply();
                                            $scope.loading("hide");
                                        }else if (event.type === 'exception'){ 
                                            alert(event.message, 'error');
                                            $scope.loading("hide");
                                        }
                                    }, 
                                    {escape: false}
                           );
                        }
                        
                        $scope.saveCategoty = function(type){
                           $scope.loading("show");
                           Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.ManageTasksController.Save}',JSON.stringify(removeProperty(filterJSON($scope.contentCategory)),'attributes'),'{!opp.id}',$scope.type,
                                function(result, event){
                                    if (event.status) {
                                     alert($scope.PageMessage['MT_Success']);
                                     if(type != ''){
                                         window.open('', '_self', '');
                                         window.close();
                                         location.href = '/'+ '{!opp.Id}';
                                     }
                                     $scope.loading("hide");
                                     $scope.getTasks();
                                    //Result contains list of account names and account id
                                    }else if (event.type === 'exception'){ 
                                        alert(event.message, 'error');
                                        $scope.loading("hide");
                                    }
                                    
                                }, 
                                {escape: false}
                           );      
                        }
                        
                        $scope.addNewTask = function(){
                            $scope.newTask = {Status:'Not Started'};
                            $('.taskDetail').toggle('show');    
                        }
                        $scope.showTasks = function(tsk){
                            $scope.newTask = $scope.formatJSONData(angular.copy(tsk));
                            $('.taskDetail').toggle('show');    
                        }
                        $scope.saveTaskPopup = function(){
                            $scope.loading("show");
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.ManageTasksController.SavePopupTask}',JSON.stringify(changeDateInSalesforceDate($scope.newTask)),
                               '{!$CurrentPage.parameters.id}',
                                function(result, event){
                                    if (event.status) {
                                        alert($scope.PageMessage['MT_Success1']);
                                        $('.taskDetail').toggle('hide'); 
                                        $scope.loading("show");
                                        $scope.getTasks();
                                    }else if (event.type === 'exception'){ 
                                        alert(event.message, 'error');
                                        $scope.loading("hide");
                                    }
                                }, 
                                {escape: false}
                           );     
                        }
                        
                        $scope.loading = function(action){
                            if(action == "show"){
                                $('#contentLoading').css("display","block");
                            }
                            else{
                                $('#contentLoading').css("display","none");
                            }
                        }
                        
                        //Change Date
                        $scope.formatJSONData = function(record){
                            angular.forEach(record, function(value, key) {
                                var regexPatt = /((?=\d{4})\d{4}|(?=[a-zA-Z]{3})[a-zA-Z]{3}|\d{2})((?=\/)\/|\-)((?=[0-9]{2})[0-9]{2}|(?=[0-9]{1,2})[0-9]{1,2}|[a-zA-Z]{3})((?=\/)\/|\-)((?=[0-9]{4})[0-9]{4}|(?=[0-9]{2})[0-9]{2}|[a-zA-Z]{3})/;
                                if(typeof value != "object" && regexPatt.test(value) && (key.indexOf('Date') != -1 || key.indexOf('date')) != -1 ){
                                    if(moment(value).format('DD/MM/YYYY') != 'Invalid date'){
                                        //console.log(value);
                                        record[key] = moment(value).format('DD/MM/YYYY');     
                                    }
                                }
                                else if(typeof value != "object" &&  (key.indexOf('Date') != -1 || key.indexOf('date')) != -1 ){
                                    if(moment(new Date(value)).format('DD/MM/YYYY') != 'Invalid date'){
                                        record[key] = moment(new Date(value)).format('DD/MM/YYYY');     
                                    }
                                }
                                else if(typeof value != "object" && key.indexOf('CP_Processed_On__c') != -1){
                                    if(moment(value).format('DD/MM/YYYY') != 'Invalid date')
                                        record[key] = moment(value).format('DD/MM/YYYY');    
                                }
                                else if (typeof value == "object") {
                                    $scope.formatJSONData(value);
                                }
                            });
                            return record;
                        }
                        
                        //Load Defaults 
                        $scope.getTasks();
                        $('.closeTaskDetail').on('click', function(){
                            $('.taskDetail').toggle('hide');    
                        });
                    });
                    
                    function removeProperty(data, prop) {
                        for (var key in data) {
                            var item = data[key]; 
                            
                            if (typeof item != "object") {
                                delete data[prop]; 
                            } else if (typeof item == "object") {
                                delete data[prop]; 
                                removeProperty(item,prop);
                            }
                        } return data;   
                    }
                    myApp.directive('jqdatepickerfuture', function () {
                        return {
                            restrict: 'A',
                            require: 'ngModel',
                             link: function (scope, element, attrs, ngModelCtrl) {
                                $(element).datepicker({
                                    dateFormat: 'dd/mm/yy',
                                    changeMonth: true, 
                                    changeYear: true, 
                                    minDate: 0, // 0 days offset = today
                                    onSelect: function (date) {
                                        ngModelCtrl.$setViewValue(date);
                                        ngModelCtrl.$render();
                                        scope.$apply();
                                    }
                                });
                                scope.$watch(attrs.ngModel, function(newValue) {
                                    if(newValue == ''){
                                        ngModelCtrl.$setViewValue(null);
                                    }
                                });
                            }
                        };
                    });
                    myApp.filter('formatLabel', function() {
                        return function(label, fieldApiName) {
                            if(fieldApiName.indexOf('Referrer__r.Name') != -1)
                                return 'Referrer'
                            else if(fieldApiName.indexOf('Account_Source__r.Name') != -1) 
                                return 'Source';
                            else if(fieldApiName.indexOf('Owner.Name') != -1) 
                                return 'Owner'; 
                            else if(fieldApiName.indexOf('BillingGeocodeAccuracy') != -1)
                                return 'Billing Address';     
                            else
                                return label;  
                        }
                    });
                    
                    
                    //Filter the SObject JSON
                    function filterJSON(data) {
                        var ele = data;
                          
                        for (var i in ele) {
                                           
                            var ele1 = ele[i];
                            if(ele[i] != null && ele[i].hasOwnProperty('$$hashKey')){
                                delete ele[i]['$$hashKey']
                            }
                            for (var j in ele1) {
                                
                                if(typeof(ele1[j]) == 'object'){
                                    if(ele[i][j] != null &&  ele[i][j].hasOwnProperty('$$hashKey')){
                                        delete ele[i][j]['$$hashKey']
                                    }
                                    for (var k in ele1[j]) {
                                        for (var l in ele1[j][k]) {
                                            if(ele[i][j][k][l] != null && ele[i][j][k][l].hasOwnProperty('$$hashKey')){
                                                delete ele[i][j][k][l]['$$hashKey']
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if(ele.length === undefined){
                            delete  ele['$$hashKey'];        
                        }
                        return ele;
                    }
                    function changeDateInSalesforceDate(data){
                        for (var key in data) {
                            var item = data[key];
                            if (typeof item != "object" && (key.indexOf('Date') != -1 || key.indexOf('Birthdate') != -1)) {
                                console.log(data[key]);
                                var datet = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/i;
                                if(data[key] != '' && datet.test(data[key])){
                                    data[key] = moment(data[key],'DD/MM/YYYY').format('YYYY-MM-DD');
                                }
                                else{
                                    data[key] = null;
                                }
                            } else if (typeof item == "object") {
                                changeDateInSalesforceDate(item);
                            }
                        } 
                        return data;
                    }
                    
                    function back(){
                        sforce.one.navigateToURL('/apex/{!nameSpacePrefix}ItineraryBuilder?id={!$CurrentPage.parameters.id}');
                    }
                </script>       
            </head>    
            <body >
                <div class="slds">
                    <c:OpportunityDetailComponent ></c:OpportunityDetailComponent>
                </div>  
                <div class="slds" ng-app="MyApp" >
                    <div  id="mycontroller" ng-controller="myController"   >
                        <c:AlertBox />
                        <c:Loading />
                        
                        <div class="slds-card slds-page-header__detail-row" style="margin: 10px;">
                            <div class="slds-card__body " style="padding : 5px">
                                <div class="slds-form-element slds-col slds-size--1-of-1">
                                    <div class="slds-form-element__control slds-float--right slds-p-horizontal--large">
                                        <select id="sectionType" class="slds-select" ng-change="changeCat()" ng-model="SectionType" ng-options="record.value as record.label for record in pickList['stagename']">
                                            <option value="" label="All"></option>
                                        </select>
                                    </div>
                                    <label class="slds-form-element__label slds-float--right" style="margin-top: 7px;" for="inputNameSample1" ><strong>Section</strong></label>
                                </div>
                                <br/>
                                <br/>
                                <div class="slds-form-element slds-col slds-size--1-of-1">
                                    <div class="slds-table-wrap">
                                        <div class="slds-scrollable--x">
                                            <table class="itinerary slds-table slds-table--bordered">
                                                <thead>
                                                    <tr class="slds-text-heading--label">
                                                        <th scope="col">
                                                           Selected
                                                        </th>
                                                        <th scope="col" ng-class="{'slds-is-sortable' :col.label=='Name'}" ng-repeat="col in taskFieldSet">
                                                            <span class="slds-truncate">{{col.label | formatLabel : col.fieldPath}}</span> 
                                                            <button ng-if="col.label=='Account Name'" class="slds-button slds-button--icon-bare">
                                                                <svg aria-hidden="true" class="slds-button__icon slds-button__icon--small">
                                                                    <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                </svg>
                                                                <span class="slds-assistive-text">Sort</span>
                                                            </button>       
                                                        </th>
                                                        
                                                        <th scope="col">
                                                            <span class="slds-truncate">Action</span>
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="slds-hint-parent" ng-repeat="lstTask in contentCategory">
                                                        <td>
                                                             <label class="slds-checkbox" >
                                                                <input name="checkbox" type="checkbox" ng-model="lstTask.selected" />
                                                                <span class="slds-checkbox--faux"></span>
                                                              </label>
                                                        </td>
                                                        <td data-label="{{field.label}}" ng-repeat="field in taskFieldSet">
                                                            <span ng-if="field.fieldPath.indexOf('BillingGeocodeAccuracy') == -1">
                                                                <span ng-if="field.fieldPath.indexOf(replation) ==-1 && field.typeApex != 'DATETIME' && field.typeApex != 'DATE'">
                                                                    <a ng-show="field.fieldPath.indexOf('Name') !=-1 && field.fieldPath.length == 4"  ng-click="searchOpportunity(acc);" href="#">{{lstTask.tsk[field.fieldPath]}}</a>
                                                                    <span ng-show="field.fieldPath.indexOf('Name') ==-1 && field.fieldPath.indexOf('Epic') == -1">
                                                                        {{lstTask.tsk[field.fieldPath]}}
                                                                    </span>
                                                                </span>
                                                                <span ng-if="field.fieldPath.indexOf(replation) ==-1 && (field.typeApex == 'DATETIME'  || field.typeApex == 'DATE')">
                                                                    <p ng-bind="lstTask.tsk[field.fieldPath]| date:'dd/MM/yyyy'"></p> 
                                                                </span>
                                                                <span ng-if="field.fieldPath.indexOf(replation) != -1">
                                                                    <a href="/{{lstTask.tsk[splitUp(field.fieldPath)[0]].Id}}">{{lstTask.tsk[splitUp(field.fieldPath)[0]][splitUp(field.fieldPath)[1]]}}</a>
                                                                </span> 
                                                                
                                                            </span>
                                                           
                                                            
                                                        </td>
                                                        
                                                        <td data-label="More">
                                                            <span class="slds-truncate"><a href="" ng-click="showTasks(lstTask.tsk)">More</a></span>    
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div> 
                                    </div>
                                </div>  
                            </div>
                        </div>  
                        <div class="slds-modal__footer slds-modal__footer" style="position: fixed;bottom: 0px;width: 100%;">
                            <div class="slds-x-small-buttons--horizontal">
                                 <button class="slds-button  slds-button--brand" ng-click="addNewTask()">Add New Task</button>
                                 <button class="slds-button  slds-button--brand" ng-click="saveCategoty('')">Save</button>
                                 <button class="slds-button  slds-button--brand" ng-click="saveCategoty('close')">Save &amp; Close</button>
                                 <button  class="slds-button slds-button--brand" onclick="back();" ng-if="backButton" > Back</button>
                           </div>
                        </div>
                    
                        <!-- Task Popup -->
                        <div ng-form="taskDetail">
                            <div aria-hidden="false" style="display:none;" role="dialog" class="slds-modal slds-fade-in-open taskDetail">
                                <div class="slds-modal__container">
                                    <div class="slds-modal__header">
                                        <h2 class="slds-text-heading--medium" style="float:left;font-size:17px;">Task Detail</h2>
                                        <button class="slds-button slds-button--icon-inverse slds-modal__close closeTaskDetail" onclick="return false;">
                                            <svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
                                                <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                            </svg>
                                            <span class="slds-assistive-text">Close</span>
                                        </button>
                                    </div>
                                    <div class="slds-modal__content slds-scrollable--x" style="overflow-y : auto !important">
                                        <div class="slds-p-around--medium">
                                            <div class="slds-grid slds-wrap">
                                                <div class="slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-3">
                                                    <div class="form-wrap slds-grid slds-wrap slds-m-right--x-small">
                                                        <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--2-of-2 slds-large-size--3-of-3">
                                                            <label class="slds-form-element__label" for="inputNameSample1">Subject</label>
                                                              <span class="required-field">* </span> 
                                                                <div class="slds-form-element__control">
                                                                <input id="address1" class="slds-input" type="text" ng-required="true" ng-model="newTask.Subject"  />
                                                            </div>
                                                        </div>
                                                        <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                            <label class="slds-form-element__label" for="inputNameSample1">Due Date</label>
                                                                <div class="slds-form-element__control">
                                                                <input  jqdatepickerfuture="jqdatepickerfuture" class="slds-input" type="text" ng-model="newTask.ActivityDate"  />
                                                            </div>
                                                        </div>
                                                        <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                            <label class="slds-form-element__label" for="inputNameSample1">Status</label>
                                                                <div class="slds-form-element__control">
                                                                <select id="tsk_Status"  class="slds-select" ng-model="newTask.Status"  ng-options="record.value as record.label for record in pickList['status']">
                                                                    <option value="" label="-- Select --"></option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                            <label class="slds-form-element__label" for="inputNameSample1">Type</label>
                                                                <div class="slds-form-element__control">
                                                                <select id="tsk_Type"  class="slds-select" ng-model="newTask['{!nameSpacePrefix}Type__c']"  ng-options="record.value as record.label for record in pickList['{!nameSpacePrefix}type__c']">
                                                                    <option value="" label="-- Select --"></option>
                                                                </select>
                                                                
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-modal__footer">
                                        <div class="slds-x-small-buttons--horizontal">
                                            <button class="slds-button slds-button--neutral slds-button--brand" ng-disabled="taskDetail.$invalid" ng-click="saveTaskPopup()">Save</button>
                                            <button class="slds-button slds-button--neutral slds-button--brand" onclick="$('.taskDetail').toggle('hide')">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="display:none;" class="slds-backdrop slds-backdrop--open taskDetail"></div>
                        </div>
                    </div>   
                </div>
            </body>
    </html>
</apex:page>