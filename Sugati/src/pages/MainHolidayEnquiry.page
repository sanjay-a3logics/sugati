<apex:page title="Holiday Enquiry" showHeader="true"  Controller="HolidayEnquiryController" sidebar="false" standardStylesheets="false" cache="false"
    extensions="ErrorMessageController"
>
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"> 
        
            <head>
                
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/jquery-1.10.2.js')}" />
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/jquery-ui.js')}" />
                <apex:stylesheet value="{!URLFOR($Resource.Framework, 'AdditionalResouce/jquery-ui.css')}" />
                <c:BasicResources ></c:BasicResources>
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/sortable.js')}" />
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/angular-animate.js')}" />
                <apex:stylesheet value="{!URLFOR($Resource.Framework, 'AdditionalResouce/select2.css')}" />
                <apex:stylesheet value="{!URLFOR($Resource.Framework, 'AdditionalResouce/select.css')}" />
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/angular-resource.js')}" />
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/select-tpls.js')}" />
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/moment.min.js')}" />
                <apex:includescript value="{!URLFOR($Resource.Framework,'AdditionalResouce/angular-sanitize.js')}"/>
                <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css"/>

                <apex:includescript value="{!URLFOR($Resource.AngularAutoValidate,'jcs-auto-validate.min.js')}" />
                <apex:includescript value="https://appssential-mobile.s3.amazonaws.com/sf/angular-auto-validate/sldsElementModifier.js" />                
                <c:BasicCss ></c:BasicCss>
                
                <apex:stylesheet value="https://appssential-sf.s3.amazonaws.com/sugati/css/slds-appssential.css" />
                <apex:includescript value="https://appssential-sf.s3.amazonaws.com/sugati/js/slds-appssential.js" />
                
                <style>
                    @media (min-width: 48em)
                    .slds .slds-modal--large .slds-modal__container {
                        width: 70% !important;
                    }
                    .selectedAcc{
                        background-color : #D6E2F3;;
                    }
                    .select2-choices{
                        border : none !important;
                        background-images : none !important;
                    }
                    
                    
                    .bPageFooter{
                        padding: 0px !important;
                    }
                    oi-select.ng-invalid div{
                        border-color: red !important;
                    }
                </style>
                <!-- Angular Controller -->
                <script>
                    
                    var myApp = angular.module('MyApp', [
                        'ui.sortable', 'ui.select', 'ui.bootstrap', 'oi.select', 
                        'checklist-model', 'ngSanitize', 'jcs-autoValidate'
                    ]);
                    
                    var contrl = myApp.controller('myController' ,function($scope,$http, $timeout,oiSelect){
                        $scope.version = oiSelect.version.full;
                        $scope.categories = [];
                        $scope.account = [];
                        $scope.questions = [];
                        $scope.opportunity;
                        $scope.opportunityId = '';
                        $scope.searchedAccount = [];
                        $scope.searchedLead = [];
                        $scope.showAccTable = false;
                        $scope.showLeadTable = false;
                        $scope.searchedOpportunities = [];
                        $scope.searchedOpenActivities = [];
                        $scope.searchedActivityHistory = [];
                        $scope.showOpenActivitiesTable = false;
                        $scope.showActivityHistoryTable = false;
                        $scope.showOppTable = false;
                        $scope.addressAccount;
                        $scope.addressContact;
                        $scope.groupMembers = [];
                        $scope.additionalPax = 0;
                        $scope.pickList = {!pickLists};
                        $scope.carriers = {!carriers};
                        $scope.referrer = {!referrer};
                        $scope.holidayType = {!holidayType};
                        $scope.supp = {!suppliers};
                        $scope.campaigns = {!campaigns};
                        $scope.airports = {!airports};
                        $scope.test = [];
                        $scope.additionalPaxArr = [];
                        $scope.accountSearchCols = {!accountSearchfieldSet}; 
                        $scope.leadSearchCols = {!leadSearchfieldSet}; 
                        $scope.replation = '.';
                        $scope.newAirlineMember = {};
                        $scope.gmIndex;
                        $scope.newGroupMemberObj = JSON.parse('{!GroupMembersWrapperJson}');
                        $scope.isGeneralFrmValid = false;
                        $scope.ErrorMessages = JSON.parse('{!HEPageErrorMessage}');
                        $scope.nameSpacePrefix = '{!nameSpacePrefix}';
                        $scope.newOpp = false;
                        $scope.lstCountries = {!loadCountries};
                        $scope.secAccount = {};
                        $scope.selectedSecAccount;
                        
                        
                        $scope.loading = function(action){
                            if(action == "show"){
                                $('#contentLoading').css("display","block");
                            }
                            else{
                                $('#contentLoading').css("display","none");
                            }
                        }
                         
                        $scope.additionalPaxArr.push({label:"-- Select --",value:0});
                        for(var paxNum = 1; paxNum <=20; paxNum++){
                            $scope.additionalPaxArr.push({label:paxNum,value:paxNum});
                        }
                        //Formate referrer auto fill Question
                        $scope.formatInputQuestion = function($model,type) {
                            var objects;
                            angular.forEach($scope.questions,function(value,index){
                                if(value.question.Id == type){
                                    objects = value.lstOption;
                                }    
                            });
                            
                            var inputLabel = '';
                            angular.forEach(objects, function(state) {
                                if ($model === state.value) {
                                    inputLabel = state.label;
                                }
                            });
                            return inputLabel;
                        }
                        
                        // Add Communication Pre.
                        $scope.addNewCommp = function(){
                             if(!$scope.Commp.$invalid){
                                 $scope.addressContact.MailingStreet = $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_1__c'];
                                 if($scope.addressContact.MailingStreet !== undefined && $scope.addressContact.MailingStreet != '' && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'] !== undefined && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'].trim() != ''){
                                        $scope.addressContact.MailingStreet += ', ' + $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'];
                                 }
                                 if($scope.addressContact.MailingStreet !== undefined && $scope.addressContact.MailingStreet != '' && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'] !== undefined && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'].trim() != ''){
                                        $scope.addressContact.MailingStreet += ', ' + $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'];
                                 }
                                 var clonedCon = $scope.addressContact;
                                 delete clonedCon[$scope.nameSpacePrefix+'Airline_memberships__r'];
                                 delete clonedCon[$scope.nameSpacePrefix+'Communication_Preferences__r'];
                                 $scope.loading("show")
                                 Visualforce.remoting.Manager.invokeAction(
                                   '{!$RemoteAction.HolidayEnquiryController.saveCommp}',JSON.stringify(filterJSON($scope.newCommp)),JSON.stringify(filterJSON(clonedCon)),
                                    function(result, event){
                                        if (event.status) {
                                         alert($scope.ErrorMessages['HE_Commp_Save']);
                                         $('.communicationP').toggle('hide'); 
                                         $scope.newCommp = {};
                                         $scope.groupMembers[$scope.gmIndex].con = $scope.formatJSONData(JSON.parse(result))[0];
                                         $scope.addressContact = $scope.groupMembers[$scope.gmIndex].con;
                                         $scope.showAddressContactModal($scope.gmIndex);
                                         $scope.loading("hide")
                                         //Result contains list of account names and account id
                                        }else if (event.type === 'exception'){
                                            alert(event.message,'error');
                                            $scope.loading("hide")
                                        }
                                        $scope.$apply();
                                    }, 
                                    {escape: false}
                                );
                            }
                            else{
                                alert($scope.ErrorMessages['HE_Fill_Required_Details'],'Error');
                            }
                        }
                        
                        // Add Airline member
                        $scope.addNewAirlineMember = function(){
                             //$scope.newAirlineMember.con = $scope.addressContact;
                             $scope.addressContact.MailingStreet = $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_1__c'];
                             if($scope.addressContact.MailingStreet !== undefined && $scope.addressContact.MailingStreet != '' && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'] !== undefined && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'].trim() != ''){
                                    $scope.addressContact.MailingStreet += ', ' + $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'];
                             }
                             if($scope.addressContact.MailingStreet !== undefined && $scope.addressContact.MailingStreet != '' && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'] !== undefined && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'].trim() != ''){
                                    $scope.addressContact.MailingStreet += ', ' + $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'];
                             }
                             var clonedCon = $scope.addressContact;
                             delete clonedCon[$scope.nameSpacePrefix+'Airline_memberships__r'];
                             delete clonedCon[$scope.nameSpacePrefix+'Communication_Preferences__r'];
                             $scope.loading("show")
                             Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.saveAirlineMember}',JSON.stringify(filterJSON($scope.newAirlineMember)),JSON.stringify(filterJSON(clonedCon)),
                                function(result, event){
                                    if (event.status) {
                                     alert($scope.ErrorMessages['HE_AirlineMembership_Save']);
                                     $('.airlineMemberShip').toggle('hide'); 
                                     //$('.contactAddress').toggle('show');  
                                     $scope.newAirlineMember = {};
                                     $scope.groupMembers[$scope.gmIndex].con = $scope.formatJSONData(JSON.parse(result))[0];
                                     $scope.addressContact = $scope.groupMembers[$scope.gmIndex].con;
                                     $scope.showAddressContactModal($scope.gmIndex);
                                     $scope.loading("hide")
                                     //Result contains list of account names and account id
                                    }else if (event.type === 'exception'){
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                    $scope.$apply();
                                }, 
                                {escape: false}
                            );
                        }
                        
                        //Formate referrer auto fill
                        $scope.formatInput = function($model,type) {
                            var objects;
                            if(type == 'Referrer'){
                                objects =    $scope.referrer;     
                            }
                            else if(type == 'HolidayType'){
                                objects =    $scope.holidayType;         
                            }
                            else if(type == 'Supplier'){
                                objects =    $scope.supp;         
                            }
                            else if(type == 'Campaign'){
                                objects =    $scope.campaigns;
                            }
                            else if(type == 'Airport'){
                                objects =    $scope.carriers[$scope.nameSpacePrefix+'sb_carrier__c'];
                            }
                            var inputLabel = '';
                            angular.forEach(objects, function(state) {
                                if ($model === state.value) {
                                    inputLabel = state.label;
                                }
                            });
                            return inputLabel;
                        } 
                        
                         $scope.splitUp = function(data){
                            return data.split('.');    
                         }
                         
                         $scope.createAddress = function(accRec){
                             var addVal = '';
                             if(accRec.BillingStreet != null && accRec.BillingStreet != '')
                                 addVal = accRec.BillingStreet;
                             if(accRec.BillingCity != null && accRec.BillingCity != '')
                                 addVal += ', '+accRec.BillingCity;
                             if(accRec.BillingState != null && accRec.BillingState != '')
                                 addVal += ', '+accRec.BillingState;
                             if(accRec.BillingCountry != null && accRec.BillingCountry != '')
                                 addVal += ', '+accRec.BillingCity;
                             if(accRec.BillingPostalCode != null && accRec.BillingPostalCode != '')
                                 addVal += '- '+accRec.BillingPostalCode;
                             return addVal;
                         }
                        $scope.loadGroupMember = function(){
                            
                            //Load Group Members Data
                            
                            var oppId = '';
                            if($scope.opportunity !== undefined && $scope.opportunity.Id !== undefined){
                                oppId  = $scope.opportunity.Id;
                            }
                            
                            var accId = '';
                            if(!isEmpty($scope.account)){
                                accId = $scope.account.Id;
                                $scope.loading("show")
                                Visualforce.remoting.Manager.invokeAction(
                                   '{!$RemoteAction.HolidayEnquiryController.getGroupMembres}',filterJSON($scope.account),oppId,
                                    function(result, event){
                                        if (event.status) {
                                        //Result contains list of account names and account id
                                           $scope.groupMembers  = JSON.parse(result);
                                           $scope.groupMembers = $scope.formatJSONData($scope.groupMembers);
                                           $scope.$apply();
                                           $scope.loading("hide")
                                           $scope.loadAllQuestions();
                                        }else if (event.type === 'exception'){
                                            alert(event.message,'error');
                                            $scope.loading("hide")
                                        }
                                    }, 
                                    {escape: false}
                                );
                            }
                        }
                        $scope.loadAllQuestions = function(){
                            var oppId = '';
                            if($scope.opportunityId !== undefined){
                                oppId  = $scope.opportunityId;
                            }
                            
                            var accId = '';
                            if(!isEmpty($scope.account)){
                                accId = $scope.account.Id;
                                //Load all questions
                                $scope.loading("show")
                                Visualforce.remoting.Manager.invokeAction(
                                   '{!$RemoteAction.HolidayEnquiryController.loadAllQuestion}',accId ,oppId ,
                                    function(result, event){
                                        if (event.status) {
                                        //Result contains list of account names and account id
                                           $scope.questions = result;
                                           $scope.$apply();
                                           $scope.loading("hide")
                                           if($scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c'] !== undefined){
                                               //$($('.slds-tabs--path__link')[$scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c']+2]).trigger('click');
                                               $(window).scrollTop(0);
                                           }
                                        }else if (event.type === 'exception'){ 
                                            alert(event.message,'error');
                                            $scope.loading("hide")
                                        }
                                    }, 
                                    {escape: false}
                                );
                            }
                        }
                        
                        
                        $scope.LoadData = function(){
                            //Load Categories 
                            $scope.loading("show")
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.getHolidayCategories}',
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                       $scope.categories = result;
                                       $scope.$apply();
                                       loadTabNavigation();
                                       $scope.loading("hide")
                                       $scope.getAccountDetail();
                                    }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                }, 
                                {escape: false}
                            );
                       }
                       $scope.getAccountDetail = function(){     
                            //Load Account
                            $scope.loading("show")
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.getAccountDetail}','{!$CurrentPage.parameters.id}',
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                       $scope.account = result;
                                       $scope.$apply();
                                       loadTabNavigation();
                                       if($scope.account.Id !== undefined){
                                           $scope.searchOpportunity($scope.account);
                                       }
                                       $scope.loadOpportunity();
                                       $scope.loading("hide")
                                    }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                }, 
                                {escape: false}
                            );
                            
                            // Get Error Messages
                            $scope.errorslist = {};
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.ErrorMessageController.getErrorMessages}', 'HolidayEnquiry',
                                function(result, event){
                                    if (event.status) {                                        
                                        angular.extend(angular.autoValidate.errorMessages['default'], result);
                                        $scope.$apply();
                                     }else if (event.type === 'exception') 
                                        alert(event.message,'error');
                                }, 
                                {escape: false}
                            );
                        }
                        
                        $scope.loadOpportunity = function(){
                            //Load Opportunity Data
                            var oppId = '';
                            if($scope.opportunityId !== undefined){
                                oppId  = $scope.opportunityId;
                            }
                            $scope.loading("show")
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.getOpportunityDetail}','{!$CurrentPage.parameters.id}',oppId  ,
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                       $scope.opportunity = JSON.parse(result);
                                       $scope.opportunity = $scope.formatJSONData($scope.opportunity);
                                       $scope.loadGroupMember();
                                       if($scope.opportunity.Id != undefined){
                                           $scope.opportunityId = $scope.opportunity.Id;
                                           angular.element(document.getElementById('Acknowledgement')).scope().opportunityId = $scope.opportunity.Id;
                                           angular.element(document.getElementById('Acknowledgement')).scope().loadRcap(); 
                                           angular.element(document.getElementById('SuggestionController')).scope().opportunity = $scope.opportunity; 
                                           angular.element(document.getElementById('SuggestionController')).scope().LoadFilter(); 
                                           $scope.$apply();
                                           if(getQueryVariable('newOpp')){
                                               $scope.newOpp = true;
                                               $('#tab-General').parent("li").next().children("a").click(); 
                                           }
                                       }
                                       else{
                                           $scope.$apply();
                                       }
                                       $scope.loading("hide")
                                       $scope.fillReturnDate('return')
                                    }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                }, 
                                {escape: false}
                            );
                            
                        }
                        
                        //Load Date
                        $scope.LoadData();
                       
                        
                        $scope.showSearchButton = function(){
                            if('{!$CurrentPage.parameters.id}'.startsWith('001') || '{!$CurrentPage.parameters.id}'.startsWith('006')){
                                return false;
                            }
                            else{
                                return true;
                            }
                        }
                       
                        //Search Accounts
                        $scope.searchAccount = function(){
                            $scope.action = 'search';
                            $timeout(function(){
                                validateForm($scope.frmAccountSearch);
                                if ($scope.frmAccountSearch.$valid) {
                                    $scope.loading("show")
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.searchAccount}',filterJSON($scope.account),
                                        function(result, event){
                                            if (event.status) {
                                            //Result contains list of account names and account id
                                               $scope.searchedAccount = result.lstAccounts;
                                               $scope.searchedLead = result.lstLeads;
                                               //console.log(result);
                                               if($scope.searchedAccount.length > 0){
                                                   $scope.showAccTable = true;
                                               }
                                               else{
                                                   $scope.showAccTable = false;
                                                   alert($scope.ErrorMessages['HE_NoMatchedAccountFound'],'error');
                                               }
                                               if($scope.searchedLead.length > 0){
                                                   $scope.showLeadTable = true;
                                               }
                                               else{
                                                   $scope.showLeadTable = false;
                                                   //alert($scope.ErrorMessages['HE_NoMatchedLeadFound'],'error');
                                               }
                                               $scope.$apply();
                                               $scope.loading("hide")
                                            }else if (event.type === 'exception'){ 
                                                alert(event.message,'error');
                                                $scope.loading("hide")
                                            }
                                        }, 
                                        {escape: false}
                                    );
                                }
                            }, 100);
                              
                        }
                        
                        //Search Secondary Accounts
                        $scope.searchSecAccount = function(){
                            $timeout(function(){
                                validateForm($scope.frmSecAccountSearch);
                                if ($scope.frmSecAccountSearch.$valid) {
                                    $scope.loading("show")
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.searchSecAccount}',filterJSON($scope.secAccount),
                                        function(result, event){
                                            if (event.status) {
                                            //Result contains list of account names and account id
                                               $scope.searchedSecAccount = result.lstAccounts;
                                               //console.log(result);
                                               if($scope.searchedSecAccount.length > 0){
                                                   $scope.showSecAccTable = true;
                                               }
                                               else{
                                                   $scope.showAccTable = false;
                                                   alert($scope.ErrorMessages['HE_NoMatchedAccountFound'],'error');
                                               }
                                               
                                               $scope.$apply();
                                               $scope.loading("hide")
                                            }else if (event.type === 'exception'){ 
                                                alert(event.message,'error');
                                                $scope.loading("hide")
                                            }
                                        }, 
                                        {escape: false}
                                    );
                                }
                            }, 100);
                              
                        }
                        
                        //Search Accounts
                        $scope.searchOpportunity = function(account){
                            $scope.account = account;
                            $scope.loading("show")
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.getOpportunities}',$scope.account.Id,
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                       $scope.searchOpportunities = result;
                                       if($scope.searchOpportunities.length > 0){
                                           $scope.showOppTable = true;
                                           $scope.loadGroupMember();
                                           $scope.loading("hide")
                                           $scope.searchOpenActivity(account);
                                       }
                                       else{
                                           $scope.loading("hide")
                                           $scope.showOppTable = false;
                                       }
                                       $scope.$apply();
                                       
                                     }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                }, 
                                {escape: false}
                            );    
                        }
                        
                        $scope.searchActivityHistoryFunOnClick = function(){
                            if($scope.account.Id !== undefined){
                                $scope.searchActivityHistoryFun($scope.account);
                            }
                        }
                        
                        $scope.searchOpenActivity = function(account){
                            $scope.account = account;
                            $scope.loading("show")
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.getOpenActivities}',$scope.account.Id,
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                       $scope.searchedOpenActivities = result;
                                       if($scope.searchedOpenActivities.length > 0){
                                           $scope.showOpenActivitiesTable = true;
                                       }
                                       else{
                                           $scope.showOpenActivitiesTable = false;
                                       }
                                       $scope.$apply();
                                       $scope.loading("hide")
                                       $scope.searchActivityHistoryFun(account);
                                     }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide")    
                                    }
                                }, 
                                {escape: false}
                            );    
                        }
                        
                        $scope.searchActivityHistoryFun = function(account){
                            $scope.account = account;
                            $scope.loading("show")
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.getActivityHistory}',$scope.account.Id,
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                       $scope.searchActivityHistory = result;
                                       if($scope.searchActivityHistory.length > 0){
                                           $scope.showActivityHistoryTable = true;
                                           
                                       }
                                       else{
                                           $scope.showActivityHistoryTable = false;
                                       }
                                       $scope.$apply();
                                       $scope.loading("hide")
                                     }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                     }
                                }, 
                                {escape: false}
                            );    
                        }
                        //ShowAddressModal
                        $scope.showAddressModal = function(acc){
                            $scope.addressAccount = acc;
                            //console.log($scope.addressAccount );
                            //console.log(acc);
                            $scope.maplocation = acc.BillingPostalCode; 
                            var splittedAdd = ['', '', ''];
                            $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_1__c'] = '';
                            $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_2__c'] = '';
                            $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_3__c'] = '';
                            if($scope.addressAccount.BillingStreet != null && $scope.addressAccount.BillingStreet != undefined)
                                splittedAdd = $scope.addressAccount.BillingStreet.split(','); 
                            if(splittedAdd.length > 0)
                                $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_1__c'] = splittedAdd[0];
                            if(splittedAdd.length > 1)
                                $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_2__c'] = splittedAdd[1];
                            if(splittedAdd.length > 2)
                                $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_3__c'] = splittedAdd[2];
                            $('.accountAddrees').toggle('show')
                        }
                        
                        // ShowAddressContactModal
                        $scope.showAddressIndex;
                        $scope.showAddressContactModal = function(index){
                            $scope.showAddressIndex = index;
                            $scope.addressContact = $scope.groupMembers[index].con;
                            $scope.gmIndex = index;
                            if($scope.addressContact.Id == null || $scope.addressContact.Id === undefined){
                                $scope.addressContact[$scope.nameSpacePrefix+'Languages__c'] = 'English';
                            }
                            //console.log($scope.addressContact);
                            var splittedAdd = ['', '', ''];
                            if($scope.addressContact[$scope.nameSpacePrefix+'C_Prefered_Name__c'] == null && $scope.addressContact.FirstName !== undefined){
                                $scope.addressContact[$scope.nameSpacePrefix+'C_Prefered_Name__c'] = $scope.addressContact.FirstName;
                            }
                            if($scope.addressContact[$scope.nameSpacePrefix+'C_Full_Name_on_Passport__c'] == null || $scope.addressContact[$scope.nameSpacePrefix+'C_Full_Name_on_Passport__c'] == ''){
                                var conName = '';
                                if($scope.addressContact.FirstName !== undefined)
                                    conName += $scope.addressContact.FirstName+' ';
                                if($scope.addressContact.LastName !== undefined)
                                    conName += $scope.addressContact.LastName;
                                $scope.addressContact[$scope.nameSpacePrefix+'C_Full_Name_on_Passport__c'] = conName;
                            }
                            if($scope.addressContact.MailingStreet != null && $scope.addressContact.MailingStreet != undefined)
                                splittedAdd = $scope.addressContact.MailingStreet.split(','); 
                            if(splittedAdd.length > 0 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] === undefined) )
                                $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] = splittedAdd[0];
                            if(splittedAdd.length > 1 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_2__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_2__c'] === undefined))
                                $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'] = splittedAdd[1];
                            if(splittedAdd.length > 2 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_3__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_3__c'] === undefined) )
                                $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'] = splittedAdd[2];
                            $('.contactAddress').toggle('show')                        
                        }
                        
                        //Save Account Address
                        
                        $scope.saveAddress = function(createBrochure){
                            $scope.action = 'detailSave';
                            
                            $timeout(function(){
                                validateForm($scope.frmAccDetails);
                                if ($scope.frmAccDetails.$valid) {
                                    $scope.addressAccount.BillingStreet = $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_1__c'];
                                    if($scope.addressAccount.BillingStreet !== undefined && $scope.addressAccount.BillingStreet != '' && $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_2__c'] !== undefined && $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_2__c'].trim() != ''){
                                        $scope.addressAccount.BillingStreet += ', ' + $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_2__c'];
                                    }
                                    if($scope.addressAccount.BillingStreet !== undefined && $scope.addressAccount.BillingStreet != '' && $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_3__c'] !== undefined && $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_3__c'].trim() != ''){
                                        $scope.addressAccount.BillingStreet += ', ' + $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_3__c'];
                                    }
                                    $scope.loading("show")
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.saveAddress}',filterJSON($scope.addressAccount),createBrochure,
                                        function(result, event){
                                            if (event.status) {
                                                $scope.account = $scope.addressAccount;
                                                $('.accountAddrees').toggle('hide');
                                                console.log(createBrochure); 
                                                if(createBrochure == 'true'){
                                                    alert($scope.ErrorMessages['HE_Brochure_Request_Created']);
                                                }
                                                $scope.loading("hide");
                                                if($scope.account.Id !== undefined){
                                                    $scope.searchOpenActivity($scope.account);
                                                }  
                                            }else if (event.type === 'exception'){ 
                                                alert(event.message,'error');
                                                $scope.loading("hide")
                                            }
                                        }, 
                                        {escape: false}
                                    ); 
                                }
                            });
                        }
                        
                         //Save Contact Address
                        $scope.saveContactAddress = function(){
                            $timeout(function(){
                                validateForm($scope.frmContactAdd);
                                if($scope.frmContactAdd.$valid){
                                    $scope.addressContact.MailingStreet = $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_1__c'];
                                    if($scope.addressContact.MailingStreet !== undefined && $scope.addressContact.MailingStreet != '' && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'] !== undefined && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'].trim() != ''){
                                        $scope.addressContact.MailingStreet += ', ' + $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'];
                                    }
                                    if($scope.addressContact.MailingStreet !== undefined && $scope.addressContact.MailingStreet != '' && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'] !== undefined && $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'].trim() != ''){
                                        $scope.addressContact.MailingStreet += ', ' + $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'];
                                    }
                                    var copiedAdd = angular.copy($scope.addressContact);
                                    $scope.loading("show")
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.saveContactAddress}',JSON.stringify(filterJSON(copiedAdd)),
                                        function(result, event){
                                            if (event.status) {
                                                $('.contactAddress').toggle('hide');
                                                if(result[$scope.nameSpacePrefix+'Occupancy_Type__c'] !== undefined){
                                                    $scope.groupMembers[$scope.showAddressIndex].con[$scope.nameSpacePrefix+'Occupancy_Type__c'] = result[$scope.nameSpacePrefix+'Occupancy_Type__c'];
                                                }
                                                $scope.$apply();
                                                $scope.loading("hide")  
                                            }else if (event.type === 'exception'){ 
                                                alert(event.message,'error');
                                                $scope.loading("hide")
                                            }
                                        }, 
                                        {escape: false}
                                    ); 
                                }
                                else{
                                    alert($scope.ErrorMessages['HE_Fill_Required_Details'],'error');
                                    $scope.loading("hide");    
                                }
                            });
                        }
                        
                        //Update contact address and close the popup
                        $scope.updateContactAddress = function(){
                            $timeout(function(){
                                validateForm($scope.frmContactAdd);
                                if($scope.frmContactAdd.$valid){
                                    $('.contactAddress').toggle('hide'); 
                                }    
                                else{
                                    alert($scope.ErrorMessages['HE_Fill_Required_Details'],'error');
                                    $scope.loading("hide");    
                                }
                            });
                        }
                        
                        //Clear Search
                        $scope.clearSearch = function(){
                            //console.log($scope.account);
                            $scope.account = {};
                            $scope.searchedAccount = [];
                            $scope.showAccTable = false;
                            $scope.searchedOpportunities = [];
                            $scope.showOpenActivitiesTable = false;
                            $scope.showActivityHistoryTable = false;
                            $scope.showOppTable = false;
                            $scope.searchedOpenActivities = [];
                            $scope.searchedActivityHistory = [];
                        }
                        
                        // loading 
                        $scope.loading = function(action){
                            if(action == "show"){
                                $('#contentLoading').css("display","block");
                            }
                            else{
                                $('#contentLoading').css("display","none");
                            }
                        }
                        
                        //Update Billing Address
                        $scope.updateBillingAddress = function(){
                            $scope.action = 'detailSave';
                            $timeout(function(){
                                validateForm($scope.frmAccDetails);
                                if ($scope.frmAccDetails.$valid) {
                                    $scope.loading('show');
                                    $scope.addressAccount.BillingStreet = $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_1__c'] + ', ' + $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_2__c'] + ', ' + $scope.addressAccount[$scope.nameSpacePrefix+'A_Address_Line_3__c'];
                                    //console.log($scope.addressAccount);
                                    $scope.account = $scope.addressAccount;
                                    $('.accountAddrees').toggle('hide');   
                                    $scope.loading('hide'); 
                                }
                            }, 100);
                        }
                        // Brochure and Request Account
                        
                        $scope.saveBrochureRequest = function(){
                         $scope.loading("show");
                         Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.saveBroucheRequest}',filterJSON($scope.account),
                                function(result, event){
                                    if (event.status) {
                                      alert($scope.ErrorMessages['HE_Brochure_Request_Created']);  
                                      $scope.loading("hide");  
                                      if($scope.account.Id !== undefined){
                                          $scope.searchOpenActivity($scope.account);
                                      }
                                    }else if(event.type === 'exception'){
                                        alert(event.message,'error');
                                        $scope.loading("hide");  
                                    }else if(!event.status){
                                        alert($scope.ErrorMessages['HE_Select_Record'],'error');
                                        $scope.loading("hide");  
                                    }    
                                }, 
                                {escape: false}
                            ); 
                          
                        }
                        
                         // Brochure and Request Contact
                        
                        $scope.saveContactBrochureRequest = function(){
                            $timeout(function(){
                                validateForm($scope.frmContactAdd);
                                if($scope.frmContactAdd.$valid){
                                    $scope.clonedCon = $.extend(true, {}, $scope.addressContact);
                                    delete $scope.clonedCon[$scope.nameSpacePrefix+'Airline_memberships__r'];
                                    delete $scope.clonedCon[$scope.nameSpacePrefix+'Communication_Preferences__r'];
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.saveBroucheRequestContact}',JSON.stringify(filterJSON($scope.clonedCon)),$scope.account.Id,
                                        function(result, event){
                                            if (event.status) {
                                              alert($scope.ErrorMessages['HE_Brochure_Request_Created']); 
                                              $scope.loading("hide");
                                              if($scope.account.Id !== undefined){
                                                  $scope.searchOpenActivity($scope.account);
                                              } 
                                            }else if(event.type === 'exception'){
                                                alert(event.message,'error');
                                                $scope.loading("hide");
                                            }else if(!event.status){
                                                alert($scope.ErrorMessages['HE_Fill_Required_Details'],'error');
                                                $scope.loading("hide");
                                            }    
                                        }, 
                                        {escape: false}
                                    ); 
                                }
                                else{
                                    alert($scope.ErrorMessages['HE_Fill_Required_Details'],'error');
                                    $scope.loading("hide");    
                                }
                            });
                        }
                        
                        //Save and Next Account Tab
                        $scope.saveAccount = function(){
                            $scope.action = 'save';
                            
                            $timeout(function(){
                                validateForm($scope.frmAccountSearch);
                                if ($scope.frmAccountSearch.$valid) {
                                     $scope.loading("show");
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.saveAddress}',filterJSON($scope.account), false, 
                                        function(result, event){
                                            if (event.status) {
                                            //Result contains list of account names and account id
                                                $scope.account = result;
                                                $scope.$apply();
                                                $scope.loadOpportunity();
                                                $('#tab-General').click()
                                                $scope.loading("hide");
                                            }else if (event.type === 'exception'){
                                                alert(event.message,'error');
                                                 $scope.loading("hide");
                                            }
                                        }, 
                                        {escape: false}
                                    ); 
                                }
                            });
                        }
                        
                        $scope.checkAccountForm = function(){
                            $timeout(function(){
                                validateForm($scope.frmAccountSearch);
                                if ($scope.frmAccountSearch.$valid) {}
                            });
                        }
                        
                        $scope.checkOpportunityForm = function(){
                            $timeout(function(){
                                validateForm($scope.frmGeneral);
                                var isDatesNotValid  = moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'])) > moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'])) || moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'])) < moment(Date()) || moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'])) < moment(Date()); 
                                if(isDatesNotValid){
                                    alert($scope.ErrorMessages['HE_Invalid_Departure_Returning_Dates'], 'error');   
                                }
                                else if ($scope.frmGeneral.$valid) {}
                            });
                        }
                        
                        //Save and Next Opportunity Tab
                        $scope.saveOpportunity = function(){
                            $scope.loading("show");
                            $timeout(function(){
                                validateForm($scope.frmGeneral);
                                var isDatesNotValid  = moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'])) > moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'])) || moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'])) < moment(Date()) || moment(Date($scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'])) < moment(Date()); 
                                var leadNotSelected = true;
                                angular.forEach($scope.groupMembers, function(value, key) {
                                    if(value.isLead){
                                        leadNotSelected = false;    
                                    }
                                });
                                if(leadNotSelected){
                                    alert($scope.ErrorMessages['HE_Invalid_Lead_Selection'], 'error');   
                                    $scope.loading("hide");
                                }
                                else if(isDatesNotValid){
                                    alert($scope.ErrorMessages['HE_Invalid_Departure_Returning_Dates'], 'error');   
                                    $scope.loading("hide");
                                }
                                else if ($scope.frmGeneral.$valid) {
                                    Visualforce.remoting.Manager.invokeAction(
                                       '{!$RemoteAction.HolidayEnquiryController.saveOpportunity}',JSON.stringify(filterJSON($scope.opportunity)),JSON.stringify(filterJSON(removeHashKey($scope.groupMembers))),filterJSON($scope.multipleDemo.selectedCountries),filterJSON($scope.account),
                                        function(result, event){
                                            if (event.status) {
                                            //Result contains list of account names and account id
                                                var oppCreated = true;
                                                if($scope.opportunity.Id === undefined){
                                                    oppCreated = false;    
                                                }
                                                $scope.opportunity = JSON.parse(result);
                                                $scope.opportunity = $scope.formatJSONData($scope.opportunity);
                                                $scope.opportunityId = $scope.opportunity.Id;
                                                $scope.$apply();
                                                $scope.loadGroupMember(); 
                                                //$('#tab-General').parent("li").next().children("a").click();
                                                $scope.loading("hide");
                                                $scope.saveQuestions('General',-1); 
                                                if(!oppCreated){
                                                    angular.element(document.getElementById('Acknowledgement')).scope().opportunityId = $scope.opportunity.Id;
                                                    angular.element(document.getElementById('Acknowledgement')).scope().loadRcap(); 
                                                    angular.element(document.getElementById('SuggestionController')).scope().opportunity = $scope.opportunity; 
                                                    angular.element(document.getElementById('SuggestionController')).scope().LoadFilter();  
                                                    //window.history.replaceState(null, null, URL_add_parameter(location.href, 'id', $scope.opportunityId));
                                                    //windows.location.href = "apex\HolidayEnquiry"+"?id="+$scope.opportunityId;
                                                    location.href = URL_add_parameter(location.href, 'id', $scope.opportunityId)+'&newOpp=true';
                                                }
                                            }else if (event.type === 'exception'){ 
                                                 alert(event.message,'error');
                                                 $scope.loading("hide");
                                            }
                                        }, 
                                        {escape: false}
                                    );
                               }
                               else{
                                    alert($scope.ErrorMessages['HE_Fill_Required_Details'],'error');
                                    $scope.loading("hide");    
                               }
                           });
                        }
                        
                        //Save and Next Questions Tab
                        $scope.saveQuestions = function(tab,index){
                             $scope.loading("show");
                            Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.saveQuestion}',JSON.stringify($scope.questions),$scope.opportunity.Id,$scope.account.Id,index,
                                function(result, event){
                                    if (event.status) {
                                    //Result contains list of account names and account id
                                        $scope.questions = result;
                                        $('#tab-'+tab).parent("li").next().children("a").click();   
                                        
                                        angular.element(document.getElementById('Acknowledgement')).scope().opportunityId = $scope.opportunity.Id;
                                        angular.element(document.getElementById('Acknowledgement')).scope().loadRcap();
                                        $scope.loading("hide");
                                        //console.log(tab);
                                        //console.log($scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c']);
                                        if(tab != 'General' && $scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c'] === undefined || $scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c'] <= index){
                                            $scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c'] = index+1;
                                        }
                                        $(window).scrollTop(0);
                                        //console.log($scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c']);
                                        $scope.$apply();
                                    }else if (event.type === 'exception'){ 
                                        alert(event.message,'error');
                                        $scope.loading("hide");
                                    }
                                }, 
                                {escape: false}
                            ); 
                        }
                        
                        $scope.changePax = function(){
                            if($scope.additionalPax != 0){
                                //$scope.loading("show")
                                
                                for(var paxCounter = 1; paxCounter <= $scope.additionalPax; paxCounter++){
                                    var tempObj = angular.copy($scope.newGroupMemberObj);
                                    tempObj.con.AccountId = $scope.account.Id;
                                    tempObj.con.LastName = $scope.account[$scope.nameSpacePrefix+'A_Last_Name__c'];
                                    tempObj.con.MailingStreet = $scope.account.BillingStreet;
                                    tempObj.con.MailingCity = $scope.account.BillingCity;
                                    tempObj.con.MailingState = $scope.account.BillingState;
                                    tempObj.con.MailingCountry = $scope.account.BillingCountry;
                                    tempObj.con.MailingPostalCode= $scope.account.BillingPostalCode;
                                    $scope.groupMembers.push(tempObj);  
                                      
                                }
                                /*
                                Visualforce.remoting.Manager.invokeAction(
                                   '{!$RemoteAction.HolidayEnquiryController.addPax}',$scope.additionalPax,JSON.stringify(filterJSON($scope.groupMembers)),$scope.account.Id,
                                    function(result, event){
                                        if (event.status) {
                                            //Result contains list of account names and account id
                                            $scope.groupMembers =  JSON.parse(result);
                                            $scope.groupMembers = $scope.formatJSONData($scope.groupMembers);
                                            $scope.$apply();
                                            $scope.loading("hide")
                                        }else if (event.type === 'exception'){ 
                                            alert(event.message,'error');
                                            $scope.loading("hide")
                                        }
                                    }, 
                                    {escape: false}
                                ); 
                                */   
                            }
                            $scope.additionalPax = 0;
                        }
                        
                        $scope.range = function(count){
                            var ratings = []; 
                            for (var i = 1; i < count; i++) { 
                                ratings.push(i) 
                            } 
                            return ratings;
                        }
                        
                        
                        //Travelling Countries 
                        $scope.searchEnabled = true;
                        $scope.multipleDemo = {};
                        $scope.multipleDemo.selectedCountries = {!TCountries};
                        $scope.country = {};
                        $scope.countries = {!countries};
                        
                        //Fill Return Date or Nights
                        $scope.nights;
                        $scope.fillReturnDate = function(field){
                            
                            if(field == 'night'){
                                $scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'] = moment($scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'],'DD/MM/YYYY').add($scope.nights, 'days').format('DD/MM/YYYY'); ;
                                //console.log($scope.opportunity[$scope.nameSpacePrefix+'SB_Return_Date__c']);
                            }
                            else if(field == 'return' && $scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'] !== undefined && $scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'] !== undefined){
                                var a = moment($scope.opportunity[$scope.nameSpacePrefix+'O_Return_Date__c'],'DD/MM/YYYY');
                                var b = moment($scope.opportunity[$scope.nameSpacePrefix+'O_Departure_Date__c'],'DD/MM/YYYY');
                                $scope.nights = a.diff(b, 'days');
                            }
                        }
                        
                        //Change Date
                        $scope.formatJSONData = function(record){
                            angular.forEach(record, function(value, key) {
                                var regexPatt = /((?=\d{4})\d{4}|(?=[a-zA-Z]{3})[a-zA-Z]{3}|\d{2})((?=\/)\/|\-)((?=[0-9]{2})[0-9]{2}|(?=[0-9]{1,2})[0-9]{1,2}|[a-zA-Z]{3})((?=\/)\/|\-)((?=[0-9]{4})[0-9]{4}|(?=[0-9]{2})[0-9]{2}|[a-zA-Z]{3})/;
                                if(typeof value != "object" && regexPatt.test(value) && (key.indexOf('Date') != -1 || key.indexOf('date')) != -1 ){
                                if(moment(value).format('DD/MM/YYYY') != 'Invalid date'){
                                    //console.log(value);
                                    record[key] = moment(value).format('DD/MM/YYYY');     }
                                }
                                else if(typeof value != "object" && key.indexOf('CP_Processed_On__c') != -1){
                                if(moment(value).format('DD/MM/YYYY') != 'Invalid date')
                                record[key] = moment(value).format('DD/MM/YYYY');    
                                }
                                else if (typeof value == "object") {
                                    $scope.formatJSONData(value);
                                }
                            });
                            return record;
                        }
                        
                        //Navaigation     
                        $scope.getClass = function(tabName){
                            
                            if(tabName == 'Account'){
                                if($scope.account.Id !== undefined && $scope.account.Id != '')
                                    return 'slds-is-complete';
                                else
                                   return 'slds-is-current'; 
                            }
                            else if(tabName == 'General'){
                                if($scope.account.Id !== undefined && $scope.account.Id != '' && $scope.opportunity !== undefined && $scope.opportunity.Id === undefined)    
                                    return 'slds-is-current'; 
                                else if($scope.opportunity !== undefined && $scope.opportunity.Id !== undefined)
                                    return 'slds-is-complete';
                                else
                                    return '';
                            }
                            else if($scope.opportunity !== undefined && $scope.opportunity.Id !== undefined){
                                if($scope.opportunity[$scope.nameSpacePrefix+'O_Holiday_Enquiry_Stage__c'] > tabName){
                                    return 'slds-is-complete';
                                }
                                else{
                                    return '';    
                                }
                            }
                        }  
                        
                        
                        
                        //WHO WILL BE GOING ON THIS TRIP validation
                        $scope.emailPhoneValidation = false;
                        $scope.checkForLeadDetailsVeer = function(){
                            var isValid = true;
                            var fullDetailsCount = 0;
                            angular.forEach($scope.groupMembers, function(gm){
                                if(gm.isLead){
                                    if( gm.con.FirstName != '' && gm.con.LastName != '' && gm.con.FirstName !== undefined && gm.con.LastName !== undefined){
                                        if(gm.con.Phone != '' && gm.con.Email != '' && gm.con.Email !== undefined && gm.con.Phone !== undefined)
                                            isValid = false;   
                                    }
                                 }
                            });
                            if(isValid)
                                $scope.emailPhoneValidation =  true;
                            else 
                                $scope.emailPhoneValidation =  false;
                            
                        }
                        
                        
                        //Actions for Airline Membership 
                        $scope.updateCommpRecord = function(cp){
                            $scope.newCommp = cp;
                            $('.communicationP').toggle('show');     
                            $('.contactAddress').toggle('hide');
                        }
                        $scope.deleteCommpRecord = function(AMRecord){
                             $scope.loading("show")
                             Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.DeleteCommp}',AMRecord.Id, AMRecord[$scope.nameSpacePrefix+'CP_Contact__c'], 
                                function(result, event){
                                    if (event.status) {
                                     alert($scope.ErrorMessages['HE_Commp_Delete']);
                                     $scope.newAirlineMember = {};
                                     $scope.groupMembers[$scope.gmIndex].con = $scope.formatJSONData(JSON.parse(result))[0];
                                     $scope.addressContact = $scope.groupMembers[$scope.gmIndex].con;
                                     var splittedAdd = ['', '', ''];
                                    if($scope.addressContact[$scope.nameSpacePrefix+'C_Prefered_Name__c'] == null){
                                        $scope.addressContact[$scope.nameSpacePrefix+'C_Prefered_Name__c'] = $scope.addressContact.FirstName;
                                    }
                                    if($scope.addressContact.MailingStreet != null && $scope.addressContact.MailingStreet != undefined)
                                        splittedAdd = $scope.addressContact.MailingStreet.split(','); 
                                    if(splittedAdd.length > 0 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] === undefined) )
                                        $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] = splittedAdd[0];
                                    if(splittedAdd.length > 1 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_2__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_2__c'] === undefined))
                                        $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'] = splittedAdd[1];
                                    if(splittedAdd.length > 2 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_3__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_3__c'] === undefined) )
                                        $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'] = splittedAdd[2];
                                     $scope.$apply();
                                     $scope.loading("hide")
                                    //Result contains list of account names and account id
                                    }else if (event.type === 'exception'){
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                }, 
                                {escape: false}
                            );  
                        }
                        
                        
                        $scope.updateMembershipRecord = function(AMRecord){
                            $scope.newAirlineMember = {'airline':AMRecord[$scope.nameSpacePrefix+'AM_Airline__c'], 'membershipnumber':AMRecord.Name,'id':AMRecord.Id};
                            $('.airlineMemberShip').toggle('show');     
                            $('.contactAddress').toggle('hide');
                        }
                        
                        $scope.deleteMembershipRecord = function(AMRecord){
                             $scope.loading("show")
                             Visualforce.remoting.Manager.invokeAction(
                               '{!$RemoteAction.HolidayEnquiryController.DeleteAirlineMember}',AMRecord.Id, AMRecord[$scope.nameSpacePrefix+'AM_Contact__c'], 
                                function(result, event){
                                    if (event.status) {
                                     alert($scope.ErrorMessages['HE_AirlineMembership_Delete']);
                                     $scope.newAirlineMember = {};
                                     $scope.groupMembers[$scope.gmIndex].con = $scope.formatJSONData(JSON.parse(result))[0];
                                     $scope.addressContact = $scope.groupMembers[$scope.gmIndex].con;
                                     var splittedAdd = ['', '', ''];
                                    if($scope.addressContact[$scope.nameSpacePrefix+'C_Prefered_Name__c'] == null){
                                        $scope.addressContact[$scope.nameSpacePrefix+'C_Prefered_Name__c'] = $scope.addressContact.FirstName;
                                    }
                                    if($scope.addressContact.MailingStreet != null && $scope.addressContact.MailingStreet != undefined)
                                        splittedAdd = $scope.addressContact.MailingStreet.split(','); 
                                    if(splittedAdd.length > 0 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] === undefined) )
                                        $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_1__c'] = splittedAdd[0];
                                    if(splittedAdd.length > 1 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_2__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_2__c'] === undefined))
                                        $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_2__c'] = splittedAdd[1];
                                    if(splittedAdd.length > 2 && ($scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_3__c'] == '' || $scope.addressContact [$scope.nameSpacePrefix+'C_Address_Line_3__c'] === undefined) )
                                        $scope.addressContact[$scope.nameSpacePrefix+'C_Address_Line_3__c'] = splittedAdd[2];
                                     $scope.$apply();
                                     $scope.loading("hide")
                                    //Result contains list of account names and account id
                                    }else if (event.type === 'exception'){
                                        alert(event.message,'error');
                                        $scope.loading("hide")
                                    }
                                }, 
                                {escape: false}
                            );  
                        }
                        
                        $scope.createCommpRecord = function(){
                            $scope.newCommp = {};
                            $('.communicationP').toggle('show');     
                            $('.contactAddress').toggle('hide');    
                        }
                        
                        $scope.createMembershipRecord = function(){
                            $scope.newAirlineMember = {};
                            $('.airlineMemberShip').toggle('show');     
                            $('.contactAddress').toggle('hide');
                        }
                        
                        $scope.removeSpace = function(val){
                            return val.replace(/ /g,'');
                        }
                        
                        $scope.checkBudgetRequired = function(){
                            if($scope.opportunity !== undefined && !$scope.opportunity[$scope.nameSpacePrefix+'O_Budget_specify__c']){
                                 return true;
                            }
                            else{
                                return false;    
                            }
                        }
                        
                        $scope.htmlDecode = function(question) {
                            if(question['{!nameSpacePrefix}HQ_Answer__c'] !== undefined && question[$scope.nameSpacePrefix+'HQ_Answer__c'] != ''){
                                var a = document.createElement( 'a' ); a.innerHTML = question[$scope.nameSpacePrefix+'HQ_Answer__c'];
                                if(a.textContent != undefined)
                                    question[$scope.nameSpacePrefix+'HQ_Answer__c'] = a.textContent;
                                else
                                    question[$scope.nameSpacePrefix+'HQ_Answer__c'] = '';    
                            }
                            else{
                                question[$scope.nameSpacePrefix+'HQ_Answer__c'] = '';
                            }
                        };
                        
                        //Validate Occupancy
                        $scope.validateOccupancy = function(index){
                            if($scope.groupMembers[index].con.Birthdate !== undefined && $scope.groupMembers[index].con.Birthdate != null && $scope.groupMembers[index].con.Birthdate != ''){
                                var age = moment().diff(moment($scope.groupMembers[index].con.Birthdate,'DD/MM/YYYY').format('YYYY-MM-DD'), 'years');
                                if(age <= 2 && $scope.groupMembers[index].con[$scope.nameSpacePrefix+'Occupancy_Type__c'] != 'Infant'){
                                    $scope.frmGeneral['ClientType'+index].$setValidity('ClientType'+index,false);    
                                }
                                else if(age > 2 && age <= 12 && $scope.groupMembers[index].con[$scope.nameSpacePrefix+'Occupancy_Type__c'] != 'Child'){
                                    $scope.frmGeneral['ClientType'+index].$setValidity('ClientType'+index,false);    
                                }
                                else if(age > 12 && $scope.groupMembers[index].con[$scope.nameSpacePrefix+'Occupancy_Type__c'] != 'Adult'){
                                    $scope.frmGeneral['ClientType'+index].$setValidity('ClientType'+index,false);            
                                }
                                else{
                                    $scope.frmGeneral['ClientType'+index].$setValidity('ClientType'+index,true);            
                                }
                            }
                        }
                        
                        //Add Client 
                        $scope.mapSecondaryAccounts = '{!mapSecondaryAccounts}';
                        $scope.addNewClient = function(){
                            $('.secondaryAccounts').toggle('show');    
                        }
                        $scope.saveNewClient = function(){
                            if($scope.selectedSecAccount !== undefined){
                                $scope.loading("show");
                                Visualforce.remoting.Manager.invokeAction(
                                   '{!$RemoteAction.HolidayEnquiryController.addNewClient}',$scope.selectedSecAccount,
                                    function(result, event){
                                        if (event.status) {
                                            
                                            $scope.$apply();
                                            $scope.loading("hide");
                                        }else if (event.type === 'exception'){ 
                                            alert(event.message,'error');
                                            $scope.loading("hide");
                                        }
                                    }, 
                                    {escape: false}
                                );  
                            }  
                        }
                        
                    });
                    
                    
                    
                    
                    
                    myApp.directive('jqdatepicker', function () {
                        return {
                            restrict: 'A',
                            require: 'ngModel',
                             link: function (scope, element, attrs, ngModelCtrl) {
                                $(element).datepicker({
                                    dateFormat: 'dd/mm/yy',
                                    onSelect: function (date) {
                                        ngModelCtrl.$setViewValue(date);
                                        ngModelCtrl.$render();
                                        scope.$apply();
                                    }
                                });
                                scope.$watch(attrs.ngModel, function(newValue) {
                                    if(newValue == ''){
                                        ngModelCtrl.$setViewValue(null);
                                    }
                                });
                            }
                        };
                    });
                    
                    myApp.directive('jqdatepickerpast', function () {
                        return {
                            restrict: 'A',
                            require: 'ngModel',
                             link: function (scope, element, attrs, ngModelCtrl) {
                                $(element).datepicker({
                                    dateFormat: 'dd/mm/yy',
                                    maxDate: 'today',
                                    changeMonth: true, 
                                    changeYear: true, 
                                    yearRange: "-100:+0",
                                    onSelect: function (date) {
                                        ngModelCtrl.$setViewValue(date);
                                        ngModelCtrl.$render();
                                        scope.$apply();
                                    }
                                });
                                scope.$watch(attrs.ngModel, function(newValue) {
                                    if(newValue == ''){
                                        ngModelCtrl.$setViewValue(null);
                                    }
                                });
                            }
                        };
                    });
                    
                    myApp.directive('jqdatepickerfuture', function () {
                        return {
                            restrict: 'A',
                            require: 'ngModel',
                             link: function (scope, element, attrs, ngModelCtrl) {
                                $(element).datepicker({
                                    dateFormat: 'dd/mm/yy',
                                    changeMonth: true, 
                                    changeYear: true, 
                                    minDate: 0, // 0 days offset = today
                                    onSelect: function (date) {
                                        ngModelCtrl.$setViewValue(date);
                                        ngModelCtrl.$render();
                                        scope.$apply();
                                    }
                                });
                                scope.$watch(attrs.ngModel, function(newValue) {
                                    if(newValue == ''){
                                        ngModelCtrl.$setViewValue(null);
                                    }
                                });
                            }
                        };
                    });
                    
                    myApp.directive('valid-date', function() {
                        return {
                            restrict: 'A',
                            require: 'ngModel',
                            link: function (scope, element, attrs, control) {
                                model.$parsers.push(function (viewValue) {
                                    var newDate = model.$viewValue;
                                    control.$setValidity("valid", false);  
                                    if (typeof newDate === "object" || newDate == "") return newDate;  // pass through if we clicked date from popup
                                    if (!newDate.match(/^\d{1,2}\/\d{1,2}\/((\d{2})|(\d{4}))$/))
                                        control.$setValidity("valid", true);
                                    return viewValue;
                                });
                            }
                        };
                    });
                    
                    myApp.directive('ckEditor', [function () {
                        return {
                            require: '?ngModel',
                            link: function ($scope, elm, attr, ngModel) {
                    
                                var ck = CKEDITOR.inline(elm[0]);
                                ck.on( 'instanceReady', function( ev ) {
                                     var editor = ev.editor;
                                     editor.setReadOnly( false );
                                });
                                ck.on('pasteState', function () {
                                    $scope.$apply(function () {
                                        ngModel.$setViewValue(ck.getData());
                                    });
                                });
                    
                                ngModel.$render = function (value) {
                                    ck.setData(ngModel.$modelValue);
                                };
                            }
                        };
                    }])
                    
                    //Filter the SObject JSON
                    function removeHashKey(data) {
                        for (var key in data) {
                            var item = data[key]; 
                            if (typeof item != "object") {
                                delete data['$$hashKey']; 
                            } else if (typeof item == "object") {
                                delete data['$$hashKey'];
                                removeHashKey(item);
                            }
                        } 
                        return data;   
                    }
                    
                    function changeDateInSalesforceDate(data){
                        for (var key in data) {
                            var item = data[key];
                            if (typeof item != "object" && key.indexOf('Date__c') != -1) {
                                if(data[key] != ''){
                                    data[key] = moment(data[key],'DD/MM/YYYY').format('YYYY-MM-DD');
                                }
                                else{
                                    data[key] = null;
                                }
                            } else if (typeof item == "object") {
                                changeDateInSalesforceDate(item);
                            }
                        } 
                        return data;
                    }
                    
                   
                    function stringStartsWith (string, prefix) {
                        return string.slice(0, prefix.length) == prefix;
                    }
                    
                    angular.module('MyApp').run([
                       'validator',
                       'sldsElementModifier',
                       function (validator, sldsElementModifier) {
                           validator.registerDomModifier(sldsElementModifier.key, sldsElementModifier);
                           validator.setDefaultElementModifier(sldsElementModifier.key);
                       }
                   ]);
                   
                   function URL_add_parameter(url, param, value){
                        var hash       = {};
                        var parser     = document.createElement('a');
                    
                        parser.href    = url;
                    
                        var parameters = parser.search.split(/\?|&/);
                    
                        for(var i=0; i < parameters.length; i++) {
                            if(!parameters[i])
                                continue;
                    
                            var ary      = parameters[i].split('=');
                            hash[ary[0]] = ary[1];
                        }
                    
                        hash[param] = value;
                    
                        var list = [];  
                        Object.keys(hash).forEach(function (key) {
                            list.push(key + '=' + hash[key]);
                        });
                    
                        parser.search = '?' + list.join('&');
                        return parser.href;
                    }
                    function getQueryVariable(variable) {
                      var query = window.location.search.substring(1);
                      var vars = query.split("&");
                      for (var i=0;i<vars.length;i++) {
                        var pair = vars[i].split("=");
                        if (pair[0] == variable) {
                          return pair[1];
                        }
                      } 
                    }
                </script>
                <c:HelpTextComponent />
                <c:GoogleMapComponent />
                <c:CSSStyler Page="HolidayEnquiry"></c:CSSStyler>
                
            </head>
            
            <body>
                <div ng-app="MyApp" class="app-wrap">
                    <div id="mycontroller" ng-controller="myController" >
                        <div class="slds">
                            <c:Loading ></c:Loading>
                            <c:AlertBox ></c:AlertBox>
                            <c:ClientInfoComp />
                            
                                <div class="slds-tabs--path slds-p-horizontal--medium" role="application tablist">
                                <ul class="slds-tabs--path__nav" role="presentation">
                                    <li class="slds-tabs--path__item slds-is-current slds-is-incomplete" ng-class="getClass('Account')" role="presentation">
                                      <a class="slds-tabs--path__link" aria-selected="false" tabindex="-1" role="tab" id="tab-Account" aria-controls="tab-default-1" ng-click="searchActivityHistoryFunOnClick()">
                                        <span class="slds-tabs--path__stage">
                                          <svg aria-hidden="true" class="slds-icon slds-icon--x-small">
                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#check')}"></use>
                                          </svg>
                                          <span class="slds-assistive-text">Stage Complete</span>
                                        </span>
                                        <span class="slds-tabs--path__title">Account</span>
                                      </a>
                                    </li>
                                    <li class="slds-tabs--path__item slds-is-incomplete" role="presentation" ng-class="getClass('General')">
                                      <a class="slds-tabs--path__link" aria-selected="false" tabindex="-1" role="tab" id="tab-General" aria-controls="tab-default-2" ng-click="checkAccountForm()">
                                        <span class="slds-tabs--path__stage">
                                          <svg aria-hidden="true" class="slds-icon slds-icon--x-small">
                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#check')}"></use>
                                          </svg>
                                          <span class="slds-assistive-text">Stage Complete</span>
                                        </span>
                                        <span class="slds-tabs--path__title">General</span>
                                      </a>
                                    </li>
                                    
                                    <li class="slds-tabs--path__item slds-is-incomplete" role="presentation" ng-repeat="cat in categories | filter:{Name:'!General'}" ng-class="getClass($index)">
                                      <a class="slds-tabs--path__link" aria-selected="false" tabindex="-1" role="tab"  id="tab-{{removeSpace(cat.Name)}}" aria-controls="tab-default-{{removeSpace(cat.Name)}}" ng-click="checkOpportunityForm()">
                                        <span class="slds-tabs--path__stage">
                                          <svg aria-hidden="true" class="slds-icon slds-icon--x-small">
                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#check')}"></use>
                                          </svg>
                                        </span>
                                        <span class="slds-tabs--path__title">{{cat.Name}}</span>
                                      </a>
                                    </li>
                                    
                                    <li class="slds-tabs--path__item slds-is-incomplete" role="presentation" ng-class="getClass(categories.length-1)">
                                      <a class="slds-tabs--path__link" aria-selected="false" tabindex="-1" role="tab" id="tab-Acknowledgement"  aria-controls="tab-default-Recap" ng-click="checkOpportunityForm()">
                                        <span class="slds-tabs--path__stage">
                                          <svg aria-hidden="true" class="slds-icon slds-icon--x-small">
                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#check')}"></use>
                                          </svg>
                                        </span>
                                        <span class="slds-tabs--path__title">Acknowledgement</span>
                                      </a>
                                    </li>
                                    <li class="slds-tabs--path__item slds-is-incomplete" role="presentation" ng-class="getClass(categories.length)" ng-if="{!$Setup.Pro_UE__c.Holiday_Suggestion__c}">
                                      <a class="slds-tabs--path__link" aria-selected="false" tabindex="-1" role="tab" id="tab-Suggestion" aria-controls="tab-default-Suggestion" ng-click="checkOpportunityForm()">
                                        <span class="slds-tabs--path__stage">
                                          <svg aria-hidden="true" class="slds-icon slds-icon--x-small">
                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#check')}"></use>
                                          </svg>
                                        </span>
                                        <span class="slds-tabs--path__title">Suggestion</span>
                                      </a>
                                    </li>
                                    
                                </ul>
                            
                            
                                <!-- Account Tab -->
                                <div id="tab-default-1" class="slds-tabs--default__content slds-tabs--default__full-width slds-show" role="tabpanel" style="min-height:650px;">
                                    <c:AccountSearch />
                                </div>
                                
                                <!-- Genral Tab -->
                                <div id="tab-default-2" class="slds-tabs--default__content slds-tabs--default__full-width slds-hide" role="tabpanel" ng-form="frmGeneral">
                                    <div class="slds-modal__content" style="overflow: visible">
                                        <h3 class="slds-section-title--divider">Client Information</h3>
                                        <div class="slds-p-horizontal--medium">
                                            <div class="form-wrap slds-grid slds-wrap">
                                                <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-3 slds-large-size--1-of-4">
                                                    <label class="slds-form-element__label" for="inputNameSample3">Holiday Type <span class="required-field">* </span>
                                                        <apex:outputPanel rendered="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Holiday_Type__c'].inlineHelpText!= ''}">
                                                            <i class="fa fa-question-circle fa-lg" ngtooltip="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Holiday_Type__c'].inlineHelpText}" tooltip-position="right"/>
                                                        </apex:outputPanel>
                                                    </label>
                                                    
                                                    <div class="slds-form-element__control">
                                                        <input type="text" id="Holiday-Type" class="slds-input" typeahead-editable="false" ng-model="opportunity[nameSpacePrefix+'O_Holiday_Type__c']" typeahead-input-formatter="formatInput($model,'HolidayType')" 
                                                        typeahead="state.value as state.label for state in holidayType | filter:$viewValue | limitTo:20" ng-required="true" />
                                                    </div>
                                                </div>
                                           
                                            
                                                <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-3 slds-large-size--1-of-4">
                                                    <label class="slds-form-element__label" for="inputNameSample1">Booking Currency <span class="required-field">* </span></label>
                                                    <div class="slds-form-element__control slds-select_container">
                                                        <div class="slds-select_container">
                                                            <select id="CurrencyISOCode" class="slds-select" ng-required="true" ng-model="opportunity.CurrencyIsoCode" ng-options="record.value as record.label for record in pickList['currencyisocode']">
                                                                <option value="" label="-- Select --"></option>
                                                                <!--<option ng-repeat="val in pickList['currencyisocode']" ng-selected="opportunity.CurrencyIsoCode==val.value" ng-value="val.value">{{val.label}}</option> -->
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-3 slds-large-size--1-of-4">
                                                    <label class="slds-form-element__label" for="inputNameSample2">Agency</label>
                                                    <div class="slds-form-element__control">
                                                        <input type="text" id="Supplier" class="slds-input" typeahead-editable="false" ng-model="opportunity[nameSpacePrefix+'O_Agent__c']" typeahead-input-formatter="formatInput($model,'Supplier')" 
                                                        typeahead="state.value as state.label for state in supp | filter:{label:$viewValue,type:'Agency'} | limitTo:20" 
                                                        />
                                                    </div>
                                                </div>
                                                <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-3 slds-large-size--1-of-4">
                                                    <label class="slds-form-element__label" for="inputNameSample3">What prompted you to make this enquiry? <span class="required-field">*</span></label>
                                                    <apex:outputPanel rendered="{!$ObjectType.Opportunity.fields.CampaignId.inlineHelpText!= ''}">    
                                                        <i class="fa fa-question-circle fa-lg" ngtooltip="{!$ObjectType.Opportunity.fields.CampaignId.inlineHelpText}" tooltip-position="right"/>
                                                    </apex:outputPanel>
                                                    <div class="slds-form-element__control">
                                                        <input type="text" id="Supplier" class="slds-input" typeahead-editable="false" ng-model="opportunity.CampaignId" typeahead-input-formatter="formatInput($model,'Campaign')" 
                                                        typeahead="state.value as state.label for state in campaigns | filter:$viewValue | limitTo:20" 
                                                        ng-required="true" />
                                                    </div>
                                                </div>  
                                            </div>
                                        </div>
                                    </div>
                                     <div class="slds-modal__content">
                                        <h3 class="slds-section-title--divider">Who will be going on this trip? </h3>
                                        <div class="slds-grid slds-wrap">
                                            <div class="slds-form-element slds-col slds-size--1-of-1">
                                                <!--<label class="slds-form-element__label" for="inputNameSample3">Who will be going on this trip? </label> -->
                                                <div class="slds-form-element__control">
                                                    <div class="slds-table-wrap">
                                                        <div class="slds-scrollable--x">
                                                            <table class="itinerary slds-table slds-table--bordered">
                                                                <thead>
                                                                    <tr class="slds-text-heading--label">
                                                                        <th class="slds-row-select" scope="col">
                                                                            <span class="slds-truncate">Salutation</span>
                                                                        </th>
                                                                        <th class="slds-is-sortable" scope="col">
                                                                            <span class="slds-truncate">First Name</span>
                                                                            <!--<span class="required-field">* </span> -->
                                                                        </th>
                                                                        <th scope="col">
                                                                            <span class="slds-truncate">Middle Name</span>
                                                                        </th>
                                                                        <th scope="col">
                                                                            <span class="slds-truncate">Last Name</span>
                                                                            <span class="required-field">* </span>
                                                                        </th>
                                                                        <th scope="col">
                                                                            <span class="slds-truncate">Email</span>
                                                                            <span class="required-field">* </span>
                                                                        </th>
                                                                        <th scope="col">
                                                                            <span class="slds-truncate">Phone</span>
                                                                            <span class="required-field">* </span>
                                                                        </th>
                                                                        <th scope="col">
                                                                            <span class="slds-truncate">DOB</span>
                                                                        </th>
                                                                        <th scope="col" style="width: 90px !important;">
                                                                            <span class="slds-truncate">Client Type</span>
                                                                        </th>
                                                                        <th class="slds-row-action" scope="col">
                                                                            <span class="slds-truncate">Lead</span>  
                                                                        </th>
                                                                        <th class="slds-row-action" scope="col">
                                                                            <span class="slds-truncate">Include</span>  
                                                                        </th>
                                                                        <th class="slds-row-action" scope="col">
                                                                            <span class="slds-truncate">Action</span>  
                                                                        </th>
                                                                      </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr class="slds-hint-parent" ng-repeat="gm in groupMembers track by $index">
                                                                        <td data-label="Salutation">
                                                                            <select id="salutation-{{gm.con.Id}}" class="slds-select" ng-model="groupMembers[$index].con.Salutation" ng-options="record.value as record.label for record in pickList['salutation']">
                                                                                <option value="" label="--Select--"></option>
                                                                            </select>
                                                                        </td>
                                                                        <td data-label="First Name">
                                                                            <input id="First-name" class="slds-input" ng-required="gm.isLead"  type="text" ng-model="gm.con.FirstName" ng-change="checkForLeadDetailsVeer()"/>
                                                                        </td>
                                                                        <td data-label="Middle Name">
                                                                            <input id="Middle-name" class="slds-input" type="text" ng-model="gm.con[nameSpacePrefix+'C_Middle_Name__c']" />
                                                                        </td>
                                                                        <td data-label="Last Name">
                                                                            <input id="Last-name" class="slds-input" type="text" ng-model="gm.con.LastName" ng-required="true"  />
                                                                        </td>
                                                                        <td data-label="Email">
                                                                            <input id="Email" class="slds-input" type="email" ng-model="gm.con.Email" ng-required="(emailPhoneValidation && gm.isLead)"  ng-change="checkForLeadDetailsVeer()"
                                                                                 email-err-type="HE_EmailInvalid" pattern-err-type="HE_EmailInvalid" ng-pattern="/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,15})$/" style="width: 170px !important;"/>
                                                                        </td>
                                                                        <td data-label="Phone">
                                                                            <input id="Phone" class="slds-input" type="text" ng-model="gm.con.Phone" ng-required="(emailPhoneValidation && gm.isLead)" ng-change="checkForLeadDetailsVeer()" 
                                                                                 pattern-err-type="HE_PhoneInvalid" ng-pattern="/^[+#*\(\)\[\]]*([0-9][ ext+-pw#*\(\)\[\]]*){6,45}$/" />
                                                                        </td>
                                                                        <td data-label="DOB">
                                                                            <input jqdatepickerPast="jqdatepickerPast"  class="slds-input" type="text" ng-init="formatJSONData(gm.con)" ng-model="gm.con.Birthdate" ng-change="validateOccupancy($index)"/>
                                                                        </td>
                                                                        <td data-label="Client Type">
                                                                            <select id="Client-type" name="ClientType{{$index}}" class="slds-select" style="width: 85px!important;" ng-model="gm.con[nameSpacePrefix+'Occupancy_Type__c']" ng-change="validateOccupancy($index)" ng-options="record.value as record.label for record in pickList[nameSpacePrefix+'occupancy_type__c']">
                                                                                <option value="" label="--Select--"></option>
                                                                            </select>
                                                                        </td>
                                                                        <td data-label="Lead">
                                                                            <div class="slds-form-element">
                                                                                <label class="slds-checkbox">
                                                                                    <input name="checkbox{{$index}}" type="checkbox" id="checkboxSample1{{$index}}" ng-model="gm.isLead" ng-change="checkForLeadDetailsVeer()"/>
                                                                                    <span class="slds-checkbox--faux"></span>
                                                                                    <span class="slds-form-element__label">{{val.value}}</span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td data-label="Include">
                                                                            <div class="slds-form-element">
                                                                                <label class="slds-checkbox">
                                                                                    <input name="checkboxi{{$index}}" type="checkbox" id="checkboxSample1{{$index}}" ng-model="gm.included" ng-change="checkForLeadDetailsVeer()"/>
                                                                                    <span class="slds-checkbox--faux"></span>
                                                                                    <span class="slds-form-element__label">{{val.value}}</span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td  data-label="Action">
                                                                            <a href="#" ng-click="showAddressContactModal($index);"> More </a>
                                                                        </td>
                                                                  </tr>
                                                                  <tr>
                                                                      <td style="vertical-align:middle">Add additional pax</td>
                                                                      <td data-label="Add additional pax">
                                                                          <select id="addition-Pax" class="slds-select" ng-model="additionalPax" ng-change="changePax()" ng-options="record.value as record.label for record in additionalPaxArr">
                                                                              <!--<option value="0" label="--Select--"></option>
                                                                              <!--<option ng-selected="$index+1==additionalPax" ng-repeat="n in range('19')"  ng-value="{{$index+1}}">{{$index+1}}</option>-->
                                                                          </select>  
                                                                          <!--<button class="slds-button slds-button--brand" ng-click="addNewClient()" ng-if="true" onclick="return false;">Add Client</button>  -->
                                                                      </td>
                                                                      <td colspan="9"></td>
                                                                  </tr>
                                                                  
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Group Member Section Closed -->
                                            <!-- Secondary Accounts Started
                                            <div class="slds-form-element slds-col slds-size--1-of-1">
                                                
                                                <div class="slds-form-element__control">
                                                    <div class="slds-scrollable--x">
                                                        <table class="itinerary slds-table slds-table--bordered">
                                                            <thead>
                                                                <tr class="slds-text-heading--label">
                                                                    <th class="slds-row-select" scope="col">
                                                                        <span class="slds-truncate">Salutation</span>
                                                                    </th>
                                                                    <th class="slds-is-sortable" scope="col">
                                                                        <span class="slds-truncate">First Name</span>
                                                                        
                                                                    </th>
                                                                    <th scope="col">
                                                                        <span class="slds-truncate">Middle Name</span>
                                                                    </th>
                                                                    <th scope="col">
                                                                        <span class="slds-truncate">Last Name</span>
                                                                        <span class="required-field">* </span>
                                                                    </th>
                                                                    <th scope="col">
                                                                        <span class="slds-truncate">Email</span>
                                                                        <span class="required-field">* </span>
                                                                    </th>
                                                                    <th scope="col">
                                                                        <span class="slds-truncate">Phone</span>
                                                                        <span class="required-field">* </span>
                                                                    </th>
                                                                    <th scope="col">
                                                                        <span class="slds-truncate">DOB</span>
                                                                    </th>
                                                                    <th scope="col" style="width: 90px !important;">
                                                                        <span class="slds-truncate">Client Type</span>
                                                                    </th>
                                                                    <th class="slds-row-action" scope="col">
                                                                        <span class="slds-truncate">Lead</span>  
                                                                    </th>
                                                                    <th class="slds-row-action" scope="col">
                                                                        <span class="slds-truncate">Include</span>  
                                                                    </th>
                                                                    <th class="slds-row-action" scope="col">
                                                                        <span class="slds-truncate">Action</span>  
                                                                    </th>
                                                                  </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr class="slds-hint-parent" ng-repeat="gm in groupMembers track by $index">
                                                                    <td data-label="Salutation">
                                                                        <select id="salutation-{{gm.con.Id}}" class="slds-select" ng-model="groupMembers[$index].con.Salutation" ng-options="record.value as record.label for record in pickList['salutation']">
                                                                            <option value="" label="--Select--"></option>
                                                                        </select>
                                                                    </td>
                                                                    <td data-label="First Name">
                                                                        <input id="First-name" class="slds-input" ng-required="gm.isLead"  type="text" ng-model="gm.con.FirstName" ng-change="checkForLeadDetailsVeer()"/>
                                                                    </td>
                                                                    <td data-label="Middle Name">
                                                                        <input id="Middle-name" class="slds-input" type="text" ng-model="gm.con[nameSpacePrefix+'C_Middle_Name__c']" />
                                                                    </td>
                                                                    <td data-label="Last Name">
                                                                        <input id="Last-name" class="slds-input" type="text" ng-model="gm.con.LastName" ng-required="true"  />
                                                                    </td>
                                                                    <td data-label="Email">
                                                                        <input id="Email" class="slds-input" type="email" ng-model="gm.con.Email" ng-required="(emailPhoneValidation && gm.isLead)"  ng-change="checkForLeadDetailsVeer()"
                                                                             email-err-type="HE_EmailInvalid" pattern-err-type="HE_EmailInvalid" ng-pattern="/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,15})$/" style="width: 170px !important;"/>
                                                                    </td>
                                                                    <td data-label="Phone">
                                                                        <input id="Phone" class="slds-input" type="text" ng-model="gm.con.Phone" ng-required="(emailPhoneValidation && gm.isLead)" ng-change="checkForLeadDetailsVeer()" 
                                                                             pattern-err-type="HE_PhoneInvalid" ng-pattern="/^[+#*\(\)\[\]]*([0-9][ ext+-pw#*\(\)\[\]]*){6,45}$/" />
                                                                    </td>
                                                                    <td data-label="DOB">
                                                                        <input jqdatepickerPast="jqdatepickerPast"  class="slds-input" type="text" ng-init="formatJSONData(gm.con)" ng-model="gm.con.Birthdate" ng-change="validateOccupancy($index)"/>
                                                                    </td>
                                                                    <td data-label="Client Type">
                                                                        <select id="Client-type" name="ClientType{{$index}}" class="slds-select" style="width: 85px!important;" ng-model="gm.con[nameSpacePrefix+'Occupancy_Type__c']" ng-change="validateOccupancy($index)" ng-options="record.value as record.label for record in pickList[nameSpacePrefix+'occupancy_type__c']">
                                                                            <option value="" label="--Select--"></option>
                                                                        </select>
                                                                    </td>
                                                                    <td data-label="Lead">
                                                                        <div class="slds-form-element">
                                                                            <label class="slds-checkbox">
                                                                                <input name="checkbox{{$index}}" type="checkbox" id="checkboxSample1{{$index}}" ng-model="gm.isLead" ng-change="checkForLeadDetailsVeer()"/>
                                                                                <span class="slds-checkbox--faux"></span>
                                                                                <span class="slds-form-element__label">{{val.value}}</span>
                                                                            </label>
                                                                        </div>
                                                                    </td>
                                                                    <td data-label="Include">
                                                                        <div class="slds-form-element">
                                                                            <label class="slds-checkbox">
                                                                                <input name="checkboxi{{$index}}" type="checkbox" id="checkboxSample1{{$index}}" ng-model="gm.included" ng-change="checkForLeadDetailsVeer()"/>
                                                                                <span class="slds-checkbox--faux"></span>
                                                                                <span class="slds-form-element__label">{{val.value}}</span>
                                                                            </label>
                                                                        </div>
                                                                    </td>
                                                                    <td  data-label="Action">
                                                                        <a href="#" ng-click="showAddressContactModal($index);"> More </a>
                                                                    </td>
                                                              </tr>
                                                              <tr>
                                                                  <td>Add additional pax</td>
                                                                  <td conspan="4" data-label="Add additional pax">
                                                                      <select id="addition-Pax" class="slds-select" ng-model="additionalPax" ng-change="changePax()" ng-options="record.value as record.label for record in additionalPaxArr">
                                                                      </select>    
                                                                  </td>
                                                              </tr>
                                                              
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Secondary Accounts Closed
                                            <c:SecondaryAccountSearch /> -->
                                        </div>
                                    </div>
                                    <div class="slds-modal__content">
                                        <h3 class="slds-section-title--divider">Other Detail</h3>
                                        <div class="slds-p-horizontal--medium">
                                            <div class="slds-grid slds-wrap slds-m-vertical--medium">
                                                <div class="slds-form--horizontal" style="width: 100%;">
                                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1">
                                                        <label class="slds-form-element__label" for="inputSample2">
                                                            <apex:outputPanel rendered="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Type_2__c'].inlineHelpText!= ''}">    
                                                                <i class="fa fa-question-circle fa-lg" ngtooltip="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Type_2__c'].inlineHelpText}" tooltip-position="right"/>
                                                            </apex:outputPanel>
                                                            <span>Is there any special reason for the trip, e.g. honeymoon, anniversary etc.? </span>
                                                            <span class="required-field">* </span>
                                                        </label>
                                                        <div class="slds-form-element__control">
                                                            <select id="selectSample1" class="slds-select" ng-model="opportunity[nameSpacePrefix+'O_Type_2__c']" ng-options="record.value as record.label for record in pickList[nameSpacePrefix+'o_type_2__c']" ng-required="true">
                                                                <option value="" label="--Select--"></option>
                                                            </select>    
                                                        </div>
                                                    </div>
                                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1">
                                                        <label class="slds-form-element__label" for="inputSample2">
                                                            <span>Do you already have a destination in mind for the trip?</span>
                                                            <span class="required-field">* </span>
                                                        </label>
                                                        <div class="slds-form-element__control">
                                                            <oi-select oi-options="item.label for item in countries track by item.value" ng-required="true"
                                                                ng-model="multipleDemo.selectedCountries" multiple="multiple" placeholder="Select">
                                                            </oi-select>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1">
                                                        <label class="slds-form-element__label" for="inputSample2">
                                                            <span>When are you looking to travel?</span>
                                                            <span class="required-field">* </span>
                                                        </label>
                                                        
                                                        <apex:outputPanel rendered="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Departure_Date__c'].inlineHelpText!= ''}">    
                                                            <i class="fa fa-question-circle fa-lg" ngtooltip="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Departure_Date__c'].inlineHelpText}"  tooltip-position="right"/>
                                                        </apex:outputPanel>
                                                        <div class="slds-form-element__control">
                                                            <div class="fields-group">
                                                                <div class="field first" style="width:40%">
                                                                    <input id="Departure-date" readonly="readonly"  jqdatepickerFuture="jqdatepickerFuture" class="slds-input" type="text" ng-model="opportunity[nameSpacePrefix+'O_Departure_Date__c']"  placeholder="Departure Date" ng-required="true" readOnly="true"/>
                                                                </div><div class="field" style="width:20%">
                                                                    <input id="nights" class="slds-input" type="number" min="1" ng-model="nights" ng-change="fillReturnDate('night')"  placeholder="Nights" ng-required="true" />
                                                                </div><div class="field" style="width:40%">
                                                                    <input id="Return-date"  readonly="readonly" jqdatepickerFuture="jqdatepickerFuture" class="slds-input" type="text" ng-model="opportunity[nameSpacePrefix+'O_Return_Date__c']" ng-change="fillReturnDate('return');" placeholder="Return Date" ng-required="true" readOnly="true"/>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    
                                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1">
                                                        <label class="slds-form-element__label" for="inputSample2">Are your dates flexible?
                                                            <span class="required-field">&nbsp; </span>
                                                        </label>
                                                        <div class="slds-form-element__control">
                                                            <div class="fields-group">
                                                                <div class="field" style="padding-top:5px;width:30px;">
                                                                    <label class="slds-checkbox" style="display:inline">
                                                                        <input id="Flexible" class="slds-input" type="checkbox" ng-model="opportunity[nameSpacePrefix+'O_Flexiable_Date__c']" placeholder="Departure Date" />
                                                                        <span class="slds-checkbox--faux"></span>
                                                                        <span class="slds-form-element__label">{{val.value}}</span>
                                                                    </label>
                                                                </div><div class="field first">
                                                                    <input id="Flexible-detail" class="slds-input" type="text" ng-model="opportunity[nameSpacePrefix+'O_Flexibility_Details__c']" placeholder="Flexibility Details" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1">
                                                        <label class="slds-form-element__label" for="inputSample2">
                                                            <span>Do you have a set budget in mind for the trip?</span>
                                                            <span class="required-field">* </span>
                                                        </label>
                                                        
                                                        <apex:outputPanel rendered="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Budget__c'].inlineHelpText!= ''}">    
                                                            <i class="fa fa-question-circle fa-lg" ngtooltip="{!$ObjectType.Opportunity.fields[nameSpacePrefix+'O_Budget__c'].inlineHelpText}" tooltip-position="right"/>
                                                        </apex:outputPanel>
                                                        <div class="slds-form-element__control">
                                                            <div class="fields-group">
                                                                <div class="field first" style="width:20%;">
                                                                    <input id="Budget-Amount" class="slds-input" type="text" ng-model="opportunity[nameSpacePrefix+'O_Budget__c']" placeholder="Budget" ng-required="checkBudgetRequired()" style="width:100% !important;"/>
                                                                </div><div class="field" style="width:74%">
                                                                    <input id="Budget-Note" class="slds-input" type="text" ng-model="opportunity[nameSpacePrefix+'Budget_Note__c']" placeholder="Budget Detail" style="display:inline;margin-right: 3px; width: 78% !important;"/>
                                                                    <label class="slds-checkbox" style="display:inline-block;margin-left:8px">
                                                                        <input id="w" class="slds-input" type="checkbox" ng-model="opportunity[nameSpacePrefix+'O_Budget_specify__c']" style="display:inline;width:3% !important;"/>
                                                                        <span class="slds-checkbox--faux"></span>
                                                                        <span class="slds-form-element__label">{{val.value}}</span>
                                                                    </label>
                                                                    <span class="slds-form-element__label"> Won't specify </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div ng-repeat="cat in categories | filter:{Name:'General'}" class="slds-modal__content">
                                        <h3 class="slds-section-title--divider">General Enquiry</h3>
                                        <div class="slds-p-horizontal--medium">
                                            <div class="slds-form--horizontal slds-m-top--medium" style="margin-bottom: 50px;">
                                                <div ng-repeat="qWrap in questions | filter:{question:{{!nameSpacePrefix}Q_Category__c : cat.Id}}" class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1">
                                                    <label class="slds-form-element__label" for="inputSample2">
                                                        {{qWrap.question[nameSpacePrefix+'Q_Question_Name__c']}}
                                                        <span class="required-field">&nbsp; </span>
                                                    </label>
                                                    <div class="slds-form-element__control">
                                                        <select id="selectSample1" class="slds-select" ng-model="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" ng-options="val.value as val.label for val in qWrap.lstOption" ng-show="qWrap.question['{!nameSpacePrefix}Q_Type__c'] == 'Picklist'" >
                                                        </select>    
                                                        <Textarea  ng-show="qWrap.question[nameSpacePrefix+'Q_Type__c'] == 'Text'" type="text" ng-model ="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" class="slds-input"/>
                                                        <input type="text" ng-show="qWrap.question[nameSpacePrefix+'Q_Type__c'] == 'Search'" ng-model ="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" class="slds-input" typeahead-input-formatter="formatInputQuestion($model,'{{qWrap.question.Id}}')" 
                                                            typeahead="state.value as state.label for state in qWrap.lstOption | filter:$viewValue | limitTo:20" />
                                                        <div ng-show="qWrap.question['{!nameSpacePrefix}Q_Type__c'] == 'Radio'">
                                                            <label class="slds-radio" ng-repeat="val in qWrap.lstOption">
                                                                <input type="radio" name="name-{{qWrap.question.Id}}" ng-model="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" value="{{val.value}}"/>
                                                                <span class="slds-radio--faux"></span>
                                                                <span class="slds-form-element__label">{{val.label}}</span>
                                                            </label>
                                                        </div>
                                                        <div ng-show="qWrap.question['{!nameSpacePrefix}Q_Type__c'] == 'Checkbox'">
                                                            <label class="slds-checkbox" ng-repeat="val in qWrap.lstOption">
                                                                <input type="checkbox" checklist-model="qWrap.checkedAns" checklist-value="val.value"/> 
                                                                <span class="slds-checkbox--faux"></span>
                                                                <span class="slds-form-element__label">{{val.value}}</span>
                                                            </label>
                                                        </div>    
                                                    </div>
                                                </div> 
                                            </div> 
                                        </div>
                                    </div> 
                                    <div class="fixed-footer slds-modal__footer">
                                        <button class="slds-button slds-button--brand" ng-click="saveOpportunity()" ng-disabled="isGeneralFrmValid" onclick="return false;">Save &amp; Next</button>
                                    </div>
                                </div>
                                
                                <!-- Catgories Tab -->
                               
                                <div ng-repeat="cat in categories | filter:{Name:'!General'}" id="tab-default-{{removeSpace(cat.Name)}}" class="slds-tabs--default__content slds-tabs--default__full-width slds-hide" role="tabpanel">
                                    
                                    <div class="slds-form--horizontal" style="width: 100%; margin-bottom: 50px;">
                                        <div ng-repeat="qWrap in questions | filter:{question:{{!nameSpacePrefix}Q_Category__c : cat.Id}}" class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1" ng-show="qWrap.question['{!nameSpacePrefix}Q_Holiday_Type__c'] == opportunity['{!nameSpacePrefix}O_Holiday_Type__c'] || qWrap.question['{!nameSpacePrefix}Q_Holiday_Type__c'] === undefined">
                                            
                                            <label class="slds-form-element__label" for="inputSample2">{{qWrap.question[nameSpacePrefix+'Q_Question_Name__c']}}</label>
                                            <div class="slds-form-element__control">
                                                <select id="selectSample1" class="slds-select" ng-model="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" ng-options="val.value as val.label for val in qWrap.lstOption" ng-show="qWrap.question[nameSpacePrefix+'Q_Type__c'] == 'Picklist'" >
                                                    <option value="" label="--Select--"></option>
                                                </select>    
                                                <Textarea  ng-show="qWrap.question[nameSpacePrefix+'Q_Type__c'] == 'Text'" type="text" ng-init="htmlDecode(qWrap.hq)" ng-model="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" class="slds-input"/>
                                                <input type="text" ng-show="qWrap.question[nameSpacePrefix+'Q_Type__c'] == 'Search'" ng-model ="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" class="slds-input" typeahead-input-formatter="formatInputQuestion($model,'{{qWrap.question.Id}}')" 
                                                    typeahead="state.value as state.label for state in qWrap.lstOption | filter:$viewValue | limitTo:20" />
                                                <div ng-show="qWrap.question['{!nameSpacePrefix}Q_Type__c'] == 'Radio'">
                                                    <label class="slds-radio" ng-repeat="val in qWrap.lstOption">
                                                        <input type="radio" name="name-{{qWrap.question.Id}}" ng-model="qWrap.hq[nameSpacePrefix+'HQ_Answer__c']" value="{{val.value}}"/>
                                                        <span class="slds-radio--faux"></span>
                                                        <span class="slds-form-element__label">{{val.label}}</span>
                                                    </label>
                                                </div>
                                                <div ng-show="qWrap.question['{!nameSpacePrefix}Q_Type__c'] == 'Checkbox'">
                                                    <label class="slds-checkbox" ng-repeat="val in qWrap.lstOption">
                                                        <input type="checkbox" checklist-model="qWrap.checkedAns" checklist-value="val.value"/> 
                                                        <span class="slds-checkbox--faux"></span>
                                                        <span class="slds-form-element__label">{{val.value}}</span>
                                                    </label>
                                                </div>    
                                            </div>
                                        </div> 
                                    </div> 
                                    <div class="fixed-footer slds-modal__footer">
                                        <button class="slds-button slds-button--brand" ng-click="saveQuestions(removeSpace(cat.Name), $index)" onclick="return false;" >Save &amp; Next</button>
                                    </div>
                                </div>
                               
                                
                                <!-- Recap Tab -->
                                <div id="tab-default-Recap" class="slds-tabs--default__content slds-tabs--default__full-width slds-hide" role="tabpanel">
                                    <c:MailService opportunityId="{!opp.Id}" templateName="Acknowledgement"/>
                                </div>
                                
                                <!-- Holiday Suggestion Tab -->
                                <div id="tab-default-Suggestion" class="slds-tabs--default__content slds-tabs--default__full-width slds-hide" role="tabpanel">
                                    <apex:include pageName="HolidaySuggestionComp"/>
                                </div>
                            </div>    
                                 
                                   
                    <!-- Popup Contact Address model -->
                       <div>
                        <c:AirlineMembershipComponent ></c:AirlineMembershipComponent>
                        <c:CommunicationPreferenceComponent ></c:CommunicationPreferenceComponent>
                        <div aria-hidden="false" role="dialog" style="display:none;" class="contactAddress slds-modal slds-modal--large slds-fade-in-open" ng-form="frmContactAdd">
                            <div class="slds-modal__container">
                                <div class="slds-modal__header" style="padding: 10px 16px;">
                                    <h2 class="slds-text-heading--label">Client Address<strong ng-show="addressContact.FirstName != undefined"> - {{addressContact.FirstName}} {{addressContact.LastName}}</strong></h2>
                                    <button class="slds-button slds-button--icon-inverse slds-modal__close" onclick="$('.contactAddress').toggle('hide');return false;">
                                        <svg aria-hidden="true" class="slds-button__icon slds-button__icon--large">
                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                        </svg>
                                        <span class="slds-assistive-text">Close</span>
                                    </button>
                                </div>
                               <div class="slds-modal__content slds-scrollable--y" style="height:450px;overflow:auto !important;">
                                    <div class="slds-p-around--medium">
                                    <div class="slds-grid slds-wrap">
                                      <div class="slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--2-of-3">
                                        <div class="form-wrap slds-grid slds-wrap slds-m-right--x-small">
                                           <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="Preferedname">Prefered Name</label>
                                                <div class="slds-form-element__control">
                                                    <input id="Preferedname" ng-init="addressContact[nameSpacePrefix+'C_Prefered_Name__c'] =  addressContact[nameSpacePrefix+'C_Prefered_Name__c'] !== undefined ? addressContact[nameSpacePrefix+'C_Prefered_Name__c'] : addressContact.FirstName" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Prefered_Name__c']"  />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="Birthdate">Birthday</label>
                                                <div class="slds-form-element__control">
                                                    <input id="Birthdate" class="slds-input" type="text"  jqdatepickerPast="jqdatepickerPast" ng-model="addressContact.Birthdate"  />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="Language">Language</label>
                                                <div class="slds-form-element__control">
                                                    <select id="Language" class="slds-select" style="min-width: 75px;" ng-model="addressContact[nameSpacePrefix+'Languages__c']" ng-options="record.value as record.label for record in pickList[nameSpacePrefix+'languages__c']">
                                                        <option value="" label="--Select--"></option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample1">Mailing Address Line 1</label>
                                                <div class="slds-form-element__control">
                                                    <input id="address1" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Address_Line_1__c']"  />
                                                </div>
                                            </div>
                                        
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample1">Mailing Address Line 2</label>
                                                <div class="slds-form-element__control">
                                                    <input id="address2" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Address_Line_2__c']"  />
                                                </div>
                                            </div>
                                            
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample2">Mailing Address Line 3</label>
                                                <div class="slds-form-element__control">
                                                    <input id="address3" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Address_Line_3__c']"  />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample3">Town/City</label>
                                                <div class="slds-form-element__control">
                                                    <input id="city" class="slds-input" type="text" ng-model="addressContact.MailingCity" />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample3">State</label>
                                                <div class="slds-form-element__control">
                                                    <input id="state" class="slds-input" type="text" ng-model="addressContact.MailingState" />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample3">Country</label>
                                                <div class="slds-form-element__control">
                                                    <select id="CountryAcc"  class="slds-select" ng-model="addressContact.MailingCountry"  ng-options="record.value as record.label for record in lstCountries">
                                                        <option value="" label="-- Select --"></option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample3">Mailing Zip/Postal Code</label>
                                                
                                                <div class="slds-form-element__control">
                                                    <input id="postCode" class="slds-input" type="text"  maxlength="10" ng-model="addressContact.MailingPostalCode" />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3" >
                                                <label class="slds-form-element__label" for="inputNameSample3">Email</label>
                                                <div class="slds-form-element__control">
                                                    <input id="inputNameSample3" class="slds-input" type="email" ng-model="addressContact.Email" pattern-err-type="HE_EmailInvalid" ng-pattern="/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,15})$/"/>

                                                 </div>
                                             </div>    
                                             <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample3">Phone</label>
                                                  <div class="slds-form-element__control">
                                                    <input id="phone" class="slds-input" type="text" pattern-err-type="HE_PhoneInvalid"  ng-pattern="/^[+#*\(\)\[\]]*([0-9][ ext+-pw#*\(\)\[\]]*){6,45}$/" ng-model="addressContact.Phone" />
                                                </div>
                                            </div>
                                             <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="HomePhone">Home Phone</label>
                                                <div class="slds-form-element__control">
                                                    <input id="HomePhone" class="slds-input" type="text" pattern-err-type="HE_PhoneInvalid" ng-pattern="/^[+#*\(\)\[\]]*([0-9][ ext+-pw#*\(\)\[\]]*){6,45}$/" ng-model="addressContact.HomePhone" />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="inputNameSample3">Mobile Phone</label>
                                                <div class="slds-form-element__control">
                                                    <input id="MobilePhone" class="slds-input" type="text" pattern-err-type="HE_PhoneInvalid"  ng-pattern="/^[+#*\(\)\[\]]*([0-9][ ext+-pw#*\(\)\[\]]*){6,45}$/" ng-model="addressContact.MobilePhone" />
                                                </div>
                                            </div>
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                <label class="slds-form-element__label" for="OtherPhone">Other Phone</label>
                                                <div class="slds-form-element__control">
                                                    <input id="OtherPhone" class="slds-input" type="text" pattern-err-type="HE_PhoneInvalid"  ng-pattern="/^[+#*\(\)\[\]]*([0-9][ ext+-pw#*\(\)\[\]]*){6,45}$/" ng-model="addressContact.OtherPhone" />
                                                </div>
                                            </div>
                                            
                                            <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--2-of-3">
                                                <label class="slds-form-element__label" for="Description">Description</label>
                                                <div class="slds-form-element__control">
                                                    <textarea id="Description" class="slds-textarea" type="text" ng-model="addressContact.Description" />
                                                </div>
                                            </div>
                                            
                                         </div> 
                                    </div>
                                    <div class="slds-col slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-3">
                                        <div ng-if="addressContact.MailingPostalCode!= ''">
                                            <map id="{{(addressContact.Id != undefined ? addressContact.Id : 'newContactMap')}}" location="{{(addressContact.MailingPostalCode != undefined ? addressContact.MailingPostalCode : 'SW13')}}" title="{{addressContact.MailingCountry}}" style="height:282px" />
                                        </div>
                                    </div>
                                </div>
                             </div>
                             <h3 class="slds-section-title--divider slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1" >Passport Details</h3>
                             <div class="slds-p-around--medium">
                                <div class="form-wrap slds-grid slds-wrap">
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Full Name on Passport</label>
                                        <div class="slds-form-element__control">
                                            <input id="fullNamePP" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Full_Name_on_Passport__c']" />
                                        </div>
                                    </div> 
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Gender</label>
                                        <div class="slds-form-element__control">
                                            <select id="PP_Gender" class="slds-select" style="min-width: 75px;" ng-model="addressContact[nameSpacePrefix+'C_Gender__c']" ng-options="record.value as record.label for record in pickList[nameSpacePrefix+'c_gender__c']">
                                                <option value="" label="--Select--"></option>
                                            </select>
                                        </div>
                                    </div> 
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Place of Birth</label>
                                        <div class="slds-form-element__control">
                                            <input id="PP_PBirth" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Place_of_Birth__c']" />
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Nationality</label>
                                        <div class="slds-form-element__control">
                                            <select id="PP_Nationality" class="slds-select" style="min-width: 75px;" ng-model="addressContact[nameSpacePrefix+'C_Nationality__c']" ng-options="record.value as record.label for record in pickList[nameSpacePrefix+'c_nationality__c']">
                                                <option value="" label="--Select--"></option>
                                            </select>
                                        </div>
                                    </div>
                                    
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Passport Number</label>
                                        <div class="slds-form-element__control">
                                            <input id="PP_PNo" class="slds-input" type="text" ng-model="addressContact[nameSpacePrefix+'C_Passport_Number__c']" />
                                        </div>
                                    </div> 
                                    
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Issued Date</label>
                                        <div class="slds-form-element__control">
                                            <input id="PP_IssuedOn" class="slds-input" readonly="readonly" jqdatepickerpast="jqdatepickerpast" type="text" ng-model="addressContact[nameSpacePrefix+'C_Issued_Date__c']" />
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Expiry Date</label>
                                        <div class="slds-form-element__control">
                                            <input id="PP_Expiry" class="slds-input" type="text" readonly="readonly" jqdatepickerfuture="jqdatepickerfuture" ng-model="addressContact[nameSpacePrefix+'C_Expires_Date__c']" />
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                        <label class="slds-form-element__label" for="passportNo">Issued Place</label>
                                        <div class="slds-form-element__control">
                                            <select id="PP_IssuedPlace"  class="slds-select" ng-model="addressContact[nameSpacePrefix+'C_Issue_Place__c']"  ng-options="record.value as record.label for record in lstCountries">
                                                <option value="" label="-- Select --"></option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="slds-form-element slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3"/>
                                    
                                </div>  
                             </div>
                                <br/>
                                
                                <h3 class="slds-section-title--divider slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1" >Communication Preferences</h3>
                                
                                <div class="slds-scrollable--x slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1 " ng-show="addressContact[nameSpacePrefix+'Communication_Preferences__r'].totalSize>0">
                                    <table class="slds-table slds-table--bordered">
                                        <thead>
                                            <tr class="slds-text-heading--label">
                                                <th class="slds-is-sortable" scope="col">
                                                    <span class="slds-truncate">Type</span>
                                                    <button class="slds-button slds-button--icon-bare">
                                                        <svg aria-hidden="true" class="slds-button__icon slds-button__icon--small">
                                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                        </svg>
                                                        <span class="slds-assistive-text">Sort</span>
                                                    </button>
                                                </th>
                                                <th scope="col">
                                                    <span class="slds-truncate">Opt In</span>
                                                </th>
                                                <th scope="col">
                                                    <span class="slds-truncate">Action</span>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="slds-hint-parent" ng-repeat="cp in addressContact[nameSpacePrefix+'Communication_Preferences__r'].records">
                                                <td data-label="Airline Membership Number" role="row">
                                                    <a href="/{{cp.Id}}" target="_blank" class="slds-truncate">{{cp[nameSpacePrefix+'CP_Type__c']}}</a>
                                                </td>
                                                
                                                <td data-label="Opt In">
                                                    <span class="slds-truncate">{{cp[nameSpacePrefix+'CP_Opt_in__c']}}</span>
                                                </td>
                                                
                                                <td data-label="Action">
                                                    <button class="slds-button slds-button--small slds-button--brand addAirlineMember" ng-click="updateCommpRecord(cp)" onclick="return false;">Edit</button>
                                                    <button class="slds-button slds-button--small slds-button--brand addAirlineMember" ng-click="deleteCommpRecord(cp)" onclick="return false;">Delete</button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>   
                                <button class="slds-button slds-button--brand addAirlineMember" style="float: right; margin:16px 16px 0 0;" ng-click="createCommpRecord();" onclick="return false;">New</button>  
                                <div class="clear"></div>      
                                <br/>
                                <h3 class="slds-section-title--divider slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1" >Airline memberships</h3>
                                
                                <div class="slds-scrollable--x slds-size--1-of-1 slds-medium-size--1-of-1 slds-large-size--1-of-1 " ng-show="addressContact[nameSpacePrefix+'Airline_memberships__r'].totalSize>0">
                                    <table class="slds-table slds-table--bordered">
                                        <thead>
                                            <tr class="slds-text-heading--label">
                                                <th class="slds-is-sortable" scope="col">
                                                    <span class="slds-truncate">Airline Membership Number</span>
                                                    <button class="slds-button slds-button--icon-bare">
                                                        <svg aria-hidden="true" class="slds-button__icon slds-button__icon--small">
                                                            <use xlink:href="{!URLFOR($Resource.SLDS011, '/assets/icons/standard-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                        </svg>
                                                        <span class="slds-assistive-text">Sort</span>
                                                    </button>
                                                </th>
                                                <th scope="col">
                                                    <span class="slds-truncate">Airline</span>
                                                </th>
                                                <th scope="col">
                                                    <span class="slds-truncate">Action</span>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr class="slds-hint-parent" ng-repeat="airlineMembership in addressContact[nameSpacePrefix+'Airline_memberships__r'].records">
                                                <td data-label="Airline Membership Number" role="row">
                                                    <a href="/{{airlineMembership.Id}}" target="_blank" class="slds-truncate">{{airlineMembership.Name}}</a>
                                                </td>
                                                
                                                <td data-label="Airline">
                                                    <span class="slds-truncate">{{airlineMembership[nameSpacePrefix+'AM_Airline__c']}}</span>
                                                </td>
                                                <td data-label="Action">
                                                    <button class="slds-button slds-button--small slds-button--brand addAirlineMember" ng-click="updateMembershipRecord(airlineMembership)" onclick="return false;">Edit</button>
                                                    <button class="slds-button slds-button--small slds-button--brand addAirlineMember" ng-click="deleteMembershipRecord(airlineMembership)" onclick="return false;">Delete</button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>   
                                <button class="slds-button slds-button--brand addAirlineMember" style="float: right; margin:16px 16px 0 0;" ng-click="createMembershipRecord();" onclick="return false;">New</button>  
                                <div class="clear"></div>      
                                <br/>
                            </div>
                            
                            <div class="slds-modal__footer">
                                <div class="slds-x-small-buttons">
                                  <button class="slds-button slds-button--brand" ng-show="addressContact.Id !== undefined" ng-click="saveContactBrochureRequest()" onclick="return false;">Brochure Request</button>
                                  <button class="slds-button slds-button--brand" ng-show="addressContact.Id !== undefined" ng-click="saveContactAddress()" onclick="return false;">Save &amp; Close</button>
                                   <button class="slds-button slds-button--brand" ng-show="addressContact.Id === undefined" ng-click="updateContactAddress()">Save &amp; Close</button>
                                </div>
                            </div>
                        </div>
                   </div>
                <div style="display:none;" class="contactAddress slds-backdrop slds-backdrop--open"></div>
            </div>
           <!--- Popup Closed -->
              </div>    
                    </div>   
                </div>
   
            </body>
            <script>
                function loadTabNavigation(){
                    $('.slds-tabs--path__link').on('click', function(){
                        
                        if((angular.element(document.getElementById('mycontroller')).scope().newOpp) || ($(this)[0].id == 'tab-Account')  || 
                        ($(this)[0].id == 'tab-General' && angular.element(document.getElementById('mycontroller')).scope().frmAccountSearch.$valid) || 
                        ($(this)[0].id != 'tab-General' && $(this)[0].id != 'tab-Account' && angular.element(document.getElementById('mycontroller')).scope().frmGeneral.$valid)){
                            if(angular.element(document.getElementById('mycontroller')).scope().account.Id !== undefined){
                                $('.slds-is-current').removeClass("slds-is-current")
                                // slds-active
                                $(this).parent("li").siblings(".slds-active").removeClass("slds-active");
                                $(this).parent("li").addClass("slds-active");
                                $(this).parent("li").addClass("slds-is-current");
                                
                                // tabindex
                                $(this).parent("li").siblings().children("a").attr("tabindex", -1);
                                $(this).attr("tabindex", 0);
                                
                                // aria-selected
                                $(this).parent("li").siblings().children("a").attr("aria-selected", false);
                                $(this).attr("aria-selected", true);
                                
                                //ete
                                //$(this).parent("li").removeClass("slds-is-current");
                                //$(this).parent("li").addClass("slds-is-inComplete");
                                
                                // hiding previouly selected tab (slds-show/slds-hide)
                                $(this).closest(".slds-tabs--path").children("div[role='tabpanel'].slds-show").addClass("slds-hide");
                                $(this).closest(".slds-tabs--path").children("div[role='tabpanel'].slds-show").removeClass("slds-show");
                                // displaying newly selected tab (slds-show/slds-hide)
                                $(this).closest(".slds-tabs--path").children("div[role='tabpanel']#"+$(this).attr("aria-controls")).addClass("slds-show");
                                $(this).closest(".slds-tabs--path").children("div[role='tabpanel']#"+$(this).attr("aria-controls")).removeClass("slds-hide");
                            }
                            else{
                                alert(angular.element(document.getElementById('mycontroller')).scope().ErrorMessages['HE_Create_Account_First'],'error');
                            }
                        }
                        else{
                            alert(angular.element(document.getElementById('mycontroller')).scope().ErrorMessages['HE_Fill_Required_Details'],'Error');
                        }
                    });
                    
                }
                
               
                $('.closeaddAirlineMember').on('click', function(){
                    $('.airlineMemberShip').toggle('hide');     
                    $('.contactAddress').toggle('show');
                });
                $('.closeaddCommp').on('click', function(){
                    $('.communicationP').toggle('hide');     
                    $('.contactAddress').toggle('show');
                });
            </script>
       
    </html>
</apex:page>