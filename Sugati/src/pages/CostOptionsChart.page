<apex:page standardController="Opportunity" extensions="ChartController">
    
    <apex:includeScript id="a" value="https://www.google.com/jsapi" />
    <c:BasicResources ></c:BasicResources>
    <div class="sld" style="text-align: right;">
        <!-- To Change chart view -->
        <a  onclick="switchChart()">Toggle Data</a>
    </div>
    
    <!-- Google Charts will be drawn in this DIV -->
    <div id="chartBlock" style="max-width:683px;max-height:200px;"/>
    
    
    <!-- Chart Script Controller -->
    <script type="text/javascript">
        google.load('visualization', '1.0', {'packages':['corechart']});
        
        //To change type
        var isFullOpp = true;
        var resultData;
        
        function switchChart(){
            if(isFullOpp){
                isFullOpp = false;
            }
            else{
                isFullOpp = true;
            }  
            initCharts();  
        }
        
        // Set a callback to run when the Google Visualization API is loaded.
        google.setOnLoadCallback(initCharts);
        
        function initCharts() { 
            if(isFullOpp){       
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ChartController.getChartDataStr}','{!$CurrentPage.parameters.id}',
                     function(result, event){  
                         var visualization = new google.visualization.ColumnChart(document.getElementById('chartBlock'));
                         var data = new google.visualization.DataTable();
                         data.addColumn('string', 'Options');
                         data.addColumn('number', 'Cost');
                         var formatter = new google.visualization.NumberFormat( 
                            { prefix: '$'} 
                         ); 
                         formatter.format(data, 1); 
                         // add rows from the remoting results
                         angular.forEach(result,function(value,key){
                            var total = 0;
                            angular.forEach(value,function(cost){
                                total += cost.SC_Total_Net_CostSC__c;     
                            });
                            data.addRow(['Option '+key, Number(total.toFixed(2)) ]); 
                          });
                        // all done, lets draw the chart with some options to make it look nice.
                        visualization.draw(data, {legend : {position: 'top', textStyle: {color: 'blue', fontSize: 10}},isStacked: true, width:$('#chartBlock').css('width'),vAxis:{format: '#,### {!Opportunity.CurrencyISOCode}', textStyle:{fontSize: 10}},hAxis:{textStyle:{fontSize: 10},showTextEvery:1,slantedText:false}});
                    }, 
                    {escape: false}
                );   
            }  
            else{        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ChartController.getChartDataByClient}','{!$CurrentPage.parameters.id}',
                        function(result, event){  
                             var visualization = new google.visualization.ColumnChart(document.getElementById('chartBlock'));
                             var data = new google.visualization.DataTable();
                             data.addColumn('string', 'Options');
                             var setOfOption = new Set();
                             angular.forEach(result,function(value){
                                 angular.forEach(value,function(value1,key){
                                     setOfOption.add(key);    
                                 });
                             });
                             console.log(setOfOption);
                             angular.forEach(setOfOption,function(value){
                                 data.addColumn('number', 'Option '+value);
                             });
                             
                             // add rows from the remoting results
                            angular.forEach(result,function(client,key){
                             var costArr = [];
                             costArr.push(key);
                             var checkDuplicateSet = new Set();
                             angular.forEach(setOfOption,function(allOp){
                                var optionPresent = false;
                                angular.forEach(client,function(value, option){
                                    if(allOp == option){
                                        var total = 0;
                                        angular.forEach(value,function(cost){
                                            total += cost.SC_Total_Net_CostSC__c;     
                                        });
                                        costArr.push(Number(total.toFixed(2)) );    
                                        optionPresent = true;
                                    }
                                  });
                                  
                                  if(!optionPresent){
                                      costArr.push(0);        
                                  }
                                });
                              console.log(costArr); 
                              data.addRow(costArr); 
                            });
                            // all done, lets draw the chart with some options to make it look nice.
                            visualization.draw(data, {legend : {position: 'top', textStyle: {color: 'blue', fontSize: 10}}, width:$('#chartBlock').css('width'),vAxis:{format: '#,### {!Opportunity.CurrencyISOCode}',textStyle:{fontSize: 10}},hAxis:{textStyle:{fontSize: 10},showTextEvery:1,slantedText:false}});
                        }, 
                        {escape: false}
                    ); 
            }
        } 
    </script>
</apex:page>